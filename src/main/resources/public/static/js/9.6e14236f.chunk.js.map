{"version":3,"sources":["components/modal/Modal.js","GameView/TrainingFactory.js","GameView/TrainingView.js"],"names":["ModalWindow","_Component","_getPrototypeOf2","_this","Object","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_len","arguments","length","args","Array","_key","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","apply","concat","close","target","document","getElementById","elementId","unmountComponentAtNode","parentNode","removeChild","removeElement","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","Component","showModal","element","targetDiv","createElement","id","body","appendChild","render","TrainingFactory","lines","color","game","g","_","cloneDeep","parseLine","startingPosition","position","currentLine","undefined","currentPosition","push","sublines","sideToMove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","p","value","err","return","nextPosition","i","previousPosition","ConfigModal","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleStart","onStart","state","handleCancel","history","goBack","LIST_DATABASE","handleColorChanged","e","buildTraining","setState","createTraining","BLACK","showDemo","restartAfterError","_this2","react_default","a","className","whiteName","blackName","onChange","WHITE","type","checked","onClick","EndTrainingModal","handleGoBack","_this3","handleRestart","onRestart","TrainingView","_this4","_ref","asyncToGenerator","regenerator_default","mark","_callee","line","sleep","wrap","_context","prev","duration","Promise","resolve","setTimeout","addPositionToNotation","demoDelay","stop","_x","startLine","_callee4","restart","_context4","errorDuringLine","Game","gameLoop","nextLineIndex","currentLineIndex","_callee3","_context3","demoRunning","_callee2","_context2","TrainingView_EndTrainingModal","playerColor","gamePos","clone","onMove","source","chess","load","fen","move","from","to","promotion","console","error","lastMove","san","sloppy","log","flashBoard","goodMove","boardClass","showMove","alert","gameToTrain","totalLineCount","legalMoves","Chess","_this5","match","params","GameService","fetchGame","then","TrainingView_ConfigModal","config","prevProps","prevState","snapshot","calcLegalMoves","get","d","SQUARES","forEach","square","ms","moves","verbose","map","Fragment","onKeyDown","ChessgroundWrapper","orientation","movableColor","viewOnly","NotationView","handleClick","setPosition","makeMove","onContextualAction","handleContextualActionOnNotation","React"],"mappings":"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","file":"static/js/9.6e14236f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {render, unmountComponentAtNode} from \"react-dom\"\r\n\r\nexport class ModalWindow extends Component {\r\n  close = () => {\r\n    removeElement();\r\n  }\r\n}\r\n\r\nconst elementId = \"modal-window\";\r\n\r\nfunction removeElement() {\r\n  const target = document.getElementById(elementId);\r\n  if (target) {\r\n    unmountComponentAtNode(target);\r\n    target.parentNode.removeChild(target);\r\n  }\r\n}\r\n\r\n\r\nfunction createElement(element) {\r\n  let targetDiv = document.getElementById(elementId);\r\n  if (!targetDiv) {\r\n    targetDiv = document.createElement(\"div\");\r\n    targetDiv.id = elementId;\r\n    document.body.appendChild(targetDiv)\r\n  }\r\n  render(element, targetDiv);\r\n}\r\n\r\nexport function showModal(element) {\r\n  createElement(element);\r\n}\r\n","import _ from \"lodash\"\r\nexport default class TrainingFactory {\r\n  lines = []\r\n  color = null\r\n\r\n  createTraining(game, color) {\r\n    this.lines = [];\r\n    this.color = color;\r\n    let g = _.cloneDeep(game);\r\n    this.parseLine(g.startingPosition);\r\n    return this.lines;\r\n  }\r\n\r\n  parseLine(position, previousPositions = []) {\r\n    let currentLine = previousPositions;\r\n    let currentPosition = position;\r\n    while (currentPosition) {\r\n      currentLine.push(currentPosition);\r\n      if (currentPosition.sublines.length > 0 && currentPosition.sideToMove() !== this.color) {\r\n        for (let p of currentPosition.sublines) {\r\n          this.parseLine(_.cloneDeep(p), _.cloneDeep(currentLine));\r\n        }\r\n      }\r\n      currentPosition = currentPosition.nextPosition;\r\n    }\r\n    for (let i = 0; i < currentLine.length - 1; i++) {\r\n      currentLine[i].nextPosition = currentLine[i+1];\r\n      currentLine[i].sublines = [];\r\n      currentLine[i+1].previousPosition = currentLine[i];\r\n      currentLine[i+1].sublines = [];\r\n    }\r\n    this.lines.push(currentLine);\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport GameService from \"./GameService\";\r\nimport TrainingFactory from \"./TrainingFactory\";\r\nimport {BLACK, WHITE} from \"../models/Constants\";\r\nimport NotationView from \"./NotationView/NotationView\";\r\nimport Chess from \"chess.js\";\r\nimport Game from \"../models/Game\";\r\nimport _ from \"lodash\"\r\nimport './trainingview.scss'\r\nimport {ModalWindow, showModal} from \"../components/modal/Modal\";\r\nimport {LIST_DATABASE} from \"../Routes\";\r\nimport ChessgroundWrapper from \"./ChessBoard/ChessgroundWrapper\";\r\n\r\nclass ConfigModal extends ModalWindow {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: BLACK,\r\n      showDemo: true,\r\n      restartAfterError: true,\r\n      lines: this.buildTraining(BLACK)\r\n    }\r\n  }\r\n\r\n  handleStart = () => {\r\n    this.close();\r\n    this.props.onStart(this.state);\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.close();\r\n    if (this.props.history.length > 0) {\r\n      this.props.history.goBack();\r\n    } else {\r\n      this.props.history.push(LIST_DATABASE)\r\n    }\r\n  }\r\n\r\n  handleColorChanged = (e) => {\r\n    let color = e.target.value;\r\n    let lines = this.buildTraining(color);\r\n    this.setState({color, lines})\r\n  }\r\n\r\n  buildTraining = (color) => {\r\n    let t = new TrainingFactory();\r\n    return t.createTraining(this.props.game, color);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"/>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">Configuration de l'entraînement</p>\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            <h1 className=\"title\">{this.props.game.whiteName + (this.props.game.blackName ? \" - \" + this.props.game.blackName : \"\")}</h1>\r\n            <h2 className=\"subtitle\">Nombre de lignes : {this.state.lines.length}</h2>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Couleur du joueur</label>\r\n              <div className=\"control\">\r\n                <div className=\"select is-fullwidth\">\r\n                  <select value={this.state.color} onChange={this.handleColorChanged}>\r\n                    <option value={WHITE}>Blanc</option>\r\n                    <option value={BLACK}>Noir</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <label className=\"checkbox\">\r\n                  <input type=\"checkbox\" checked={this.state.showDemo} onChange={(e) => this.setState({showDemo: e.target.checked})}/>\r\n                  {\"    Montrer la ligne en premier\"}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <label className=\"checkbox\">\r\n                  <input type=\"checkbox\" checked={this.state.restartAfterError} onChange={e => this.setState({restartAfterError: e.target.checked})}/>\r\n                  {\"    Recommencer après une erreur\"}\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <footer className=\"modal-card-foot space-between\">\r\n            <button className=\"button\" onClick={this.handleCancel}>Annuler</button>\r\n            <button className=\"button is-success\" onClick={this.handleStart}>Démarrer</button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass EndTrainingModal extends ModalWindow {\r\n  handleGoBack = () => {\r\n    this.close();\r\n    if (this.props.history.length > 0) {\r\n      this.props.history.goBack();\r\n    } else {\r\n      this.props.history.push(LIST_DATABASE)\r\n    }\r\n  }\r\n  handleRestart = () => {\r\n    this.close();\r\n    this.props.onRestart();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"/>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">Entraînement terminé</p>\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            L'entraînement est terminé. Vous pouvez recommencer ou retourner à la page précédente.\r\n          </section>\r\n          <footer className=\"modal-card-foot space-between\">\r\n            <button className=\"button\" onClick={this.handleGoBack}>Retour</button>\r\n            <button className=\"button is-success\" onClick={this.handleRestart}>Recommencer</button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class TrainingView extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      gameToTrain: null,\r\n      currentPosition: null,\r\n      currentLine: null,\r\n      playerColor: BLACK,\r\n      game: new Game(),\r\n      totalLineCount: 0,\r\n      currentLineIndex: 1,\r\n      boardClass: \"\",\r\n      demoRunning: false,\r\n      errorDuringLine: false,\r\n      showDemo: true,\r\n      demoDelay: 800,\r\n      restartAfterError: true,\r\n      legalMoves:{}\r\n    }\r\n    this.chess = new Chess();\r\n    this.lines = [];\r\n    this.nextLineIndex = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    GameService.fetchGame(id).then(game => {\r\n      const start = (config) => {\r\n        this.lines = config.lines;\r\n        this.setState({\r\n          playerColor: config.color,\r\n          totalLineCount: this.lines.length,\r\n          showDemo: config.showDemo,\r\n          restartAfterError: config.restartAfterError\r\n        }, this.startLine)\r\n      }\r\n      showModal(<ConfigModal onStart={start} game={game} history={this.props.history}/>)\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.currentPosition !== prevState.currentPosition) {\r\n      this.calcLegalMoves();\r\n    }\r\n  }\r\n\r\n  calcLegalMoves() {\r\n    if (! (this.state.currentPosition && this.state.currentPosition.fen)) {\r\n      return;\r\n    }\r\n    const legalMoves = {get : d => legalMoves[d]};\r\n    let chess = new Chess();\r\n    chess.load(this.state.currentPosition.fen);\r\n    chess.SQUARES.forEach(square => {\r\n      const ms = chess.moves({square, verbose: true})\r\n      if (ms.length > 0) {\r\n        legalMoves[square] = ms.map(move => move.to)\r\n      }\r\n    })\r\n    this.setState({legalMoves})\r\n  }\r\n\r\n\r\n  showDemo = async (line) => {\r\n    function sleep(duration) {\r\n      return new Promise(resolve => setTimeout(resolve, duration));\r\n    }\r\n\r\n    let currentPosition = line[0];\r\n    while (currentPosition) {\r\n      this.setState({currentPosition})\r\n      if (currentPosition.previousPosition) {\r\n        this.addPositionToNotation(currentPosition)\r\n      }\r\n      await sleep(this.state.demoDelay);\r\n      currentPosition = currentPosition.nextPosition\r\n    }\r\n  }\r\n\r\n  startLine = async () => {\r\n    if (this.state.errorDuringLine && this.state.restartAfterError) {\r\n      this.setState({\r\n        currentPosition: this.state.currentLine[0],\r\n        game: new Game(),\r\n        errorDuringLine: false\r\n      }, this.gameLoop)\r\n    } else if (this.nextLineIndex < this.lines.length) {\r\n      let line = this.lines[this.nextLineIndex];\r\n      this.nextLineIndex++;\r\n      this.setState({\r\n        currentPosition: line[0],\r\n        currentLine: line,\r\n        currentLineIndex: this.nextLineIndex,\r\n        game: new Game(),\r\n        errorDuringLine: false\r\n      }, async () => {\r\n        if (this.state.showDemo) {\r\n          this.setState({demoRunning: true}, async () => {\r\n            await this.showDemo(line)\r\n            this.setState({currentPosition: line[0], game: new Game(), demoRunning:false}, this.gameLoop)\r\n          })\r\n        } else {\r\n          this.gameLoop()\r\n        }\r\n      })\r\n    } else {\r\n      const restart = () => {\r\n        this.nextLineIndex = 0;\r\n        this.setState({currentLineIndex: 1}, this.startLine)\r\n      }\r\n      showModal(<EndTrainingModal history={this.props.history} onRestart={restart}/>)\r\n    }\r\n  }\r\n\r\n  gameLoop = () => {\r\n    let currentPosition = this.state.currentPosition;\r\n    if (!currentPosition.nextPosition) {\r\n      setTimeout(this.startLine, 1000)\r\n    } else if (currentPosition.sideToMove() !== this.state.playerColor) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          currentPosition: currentPosition.nextPosition\r\n        })\r\n        this.addPositionToNotation(currentPosition.nextPosition);\r\n        currentPosition = this.state.currentPosition;\r\n        if (!currentPosition.nextPosition) {\r\n          setTimeout(this.startLine, 1000)\r\n        }\r\n      }, 300)\r\n    }\r\n  }\r\n\r\n  addPositionToNotation = (position) => {\r\n    let gamePos = this.state.game.startingPosition;\r\n    while (gamePos.nextPosition) {\r\n      gamePos = gamePos.nextPosition;\r\n    }\r\n    let clone = _.cloneDeep(position);\r\n    gamePos.nextPosition = clone;\r\n    clone.previousPosition = gamePos;\r\n    clone.nextPosition = null;\r\n    this.setState({\r\n      game: this.state.game\r\n    })\r\n  }\r\n\r\n  onMove = (source, target) => {\r\n    const currentPosition = this.state.currentPosition;\r\n    this.chess.load(currentPosition.fen);\r\n    let move = this.chess.move({\r\n      from: source,\r\n      to: target,\r\n      promotion: 'q' // NOTE: always promote to a queen for example simplicity\r\n    });\r\n    if (!move) {\r\n      console.error(\"Error illegal move\")\r\n    }\r\n    if (!currentPosition.nextPosition) {\r\n      console.error(\"Error no next position\")\r\n    }\r\n    this.chess.load(currentPosition.fen);\r\n    let wantedMove = this.chess.move(currentPosition.nextPosition.lastMove.san, {sloppy: true});\r\n    if (wantedMove.san !== move.san) {\r\n      //WRONG MOVE\r\n      console.log(\"expected move : \" + currentPosition.nextPosition.lastMove.san, \"user move : \" + move.san);\r\n      this.flashBoard(false);\r\n      this.setState({errorDuringLine: true})\r\n    } else {\r\n      //GOOD MOVE\r\n        this.setState({\r\n          currentPosition: currentPosition.nextPosition,\r\n        })\r\n        this.flashBoard(true);\r\n        this.addPositionToNotation(currentPosition.nextPosition)\r\n      this.gameLoop()\r\n    }\r\n  }\r\n\r\n  flashBoard = (goodMove) => {\r\n    let className = goodMove ? \"rightMove\" : \"wrongMove\";\r\n    this.setState({\r\n      boardClass: className\r\n    })\r\n    setTimeout(() => this.setState({boardClass: \"\"}), 500)\r\n  }\r\n\r\n  showMove = () => {\r\n    if (this.state.currentPosition.nextPosition && !this.state.demoRunning){\r\n      alert(this.state.currentPosition.nextPosition.lastMove.san)\r\n      this.setState({errorDuringLine: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          {this.state.currentPosition ?\r\n              <div className=\"training-view\" onKeyDown={this.onKeyDown}>\r\n                <div className=\"game-column\">\r\n                  <ChessgroundWrapper\r\n                      className={this.state.boardClass}\r\n                      orientation={this.state.playerColor === WHITE ? \"white\" : \"black\"}\r\n                      movableColor={this.state.playerColor === WHITE ? \"white\" : \"black\"}\r\n                      onMove={this.onMove}\r\n                      legalMoves={this.state.legalMoves}\r\n                      viewOnly={this.state.demoRunning}\r\n                      position={this.state.currentPosition.fen}\r\n                  />\r\n                  <button className={\"button\"} onClick={this.showMove}>Show Move</button>\r\n                </div>\r\n                <div className=\"notation-column\">\r\n                  <div>Ligne {this.state.currentLineIndex} / {this.state.totalLineCount}</div>\r\n                  <NotationView game={this.state.game}\r\n                                handleClick={this.setPosition}\r\n                                currentPosition={this.state.currentPosition}\r\n                                makeMove={this.makeMove}\r\n                                onContextualAction={this.handleContextualActionOnNotation}/>\r\n                </div>\r\n              </div>\r\n              : <div>loading</div>}\r\n        </>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}