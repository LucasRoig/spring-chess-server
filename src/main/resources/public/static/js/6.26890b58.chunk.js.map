{"version":3,"sources":["database/DbDetails.js","components/modal/Modal.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","database/DatabaseService.js","components/modal/ConfirmationModal.js","database/DatabaseList.js","models/Constants.js","models/Position.js","models/Game.js"],"names":["__webpack_require__","d","__webpack_exports__","GameHeader","DbDetails","tcomb__WEBPACK_IMPORTED_MODULE_0__","tcomb__WEBPACK_IMPORTED_MODULE_0___default","n","t","struct","whiteName","String","blackName","id","Number","name","gameHeaders","list","ModalWindow","_Component","_getPrototypeOf2","_this","Object","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_len","arguments","length","args","Array","_key","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","apply","concat","close","target","document","getElementById","elementId","unmountComponentAtNode","parentNode","removeChild","removeElement","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","Component","showModal","element","targetDiv","createElement","body","appendChild","render","_toConsumableArray","arr","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","from","_iterableToArray","TypeError","_nonIterableSpread","PostDatabaseRequest","listDatabases","ApiService","get","then","res","status","data","console","log","catch","e","error","postDatabase","_ref","request","post","getDetails","createGame","databaseId","game","Game","deleteDatabase","delete","importPgn","file","formData","FormData","append","ConfirmationModal","handleCancel","props","onCancel","handleConfirm","onConfirm","react_default","a","className","onClick","title","message","cancelButtonText","confirmButtonClass","confirmButtonText","propTypes","PropTypes","string","func","defaultProps","DatabaseItem","database","stopPropagation","ConfirmationModal_ConfirmationModal","showConfirmationModal","DatabaseService","onDelete","CreateDatabaseForm","_useState","useState","_useState2","slicedToArray","setName","type","placeholder","value","onChange","onDatabaseCreated","disabled","DatabaseList","classCallCheck","possibleConstructorReturn","getPrototypeOf","db","state","databases","push","setState","onDatabaseDeleted","filter","loading","_this2","_this3","DatabaseList_CreateDatabaseForm","map","DatabaseList_DatabaseItem","key","history","WHITE","BLACK","Position","fen","lastMove","previousPosition","nextPosition","comment","sublines","color","moveNumber","Constants","find","pos","_default","positions","startingPosition"],"mappings":"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","file":"static/js/6.26890b58.chunk.js","sourcesContent":["import t from \"tcomb\";\r\n\r\nexport const GameHeader = t.struct({\r\n  whiteName: t.String,\r\n  blackName: t.String,\r\n  id: t.Number\r\n})\r\nexport const DbDetails = t.struct({\r\n  name: t.String,\r\n  id: t.Number,\r\n  gameHeaders: t.list(GameHeader)\r\n})\r\n","import React, { Component } from 'react'\r\nimport {render, unmountComponentAtNode} from \"react-dom\"\r\n\r\nexport class ModalWindow extends Component {\r\n  close = () => {\r\n    removeElement();\r\n  }\r\n}\r\n\r\nconst elementId = \"modal-window\";\r\n\r\nfunction removeElement() {\r\n  const target = document.getElementById(elementId);\r\n  if (target) {\r\n    unmountComponentAtNode(target);\r\n    target.parentNode.removeChild(target);\r\n  }\r\n}\r\n\r\n\r\nfunction createElement(element) {\r\n  let targetDiv = document.getElementById(elementId);\r\n  if (!targetDiv) {\r\n    targetDiv = document.createElement(\"div\");\r\n    targetDiv.id = elementId;\r\n    document.body.appendChild(targetDiv)\r\n  }\r\n  render(element, targetDiv);\r\n}\r\n\r\nexport function showModal(element) {\r\n  createElement(element);\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import ApiService from \"../services/ApiService\";\r\nimport t from \"tcomb\";\r\nimport Game from \"../models/Game\";\r\nimport {DbDetails, GameHeader} from \"./DbDetails\";\r\n\r\nconst listDatabases = () => {\r\n  return ApiService.get(\"/database\").then(res => {\r\n    if (res.status === 200) {\r\n      return res.data;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).then(data => {\r\n    console.log(data)\r\n    return data\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst PostDatabaseRequest = t.struct({\r\n  name: t.String,\r\n}, \"PostDatabaseRequest\")\r\n\r\nconst postDatabase = ({name}) => {\r\n  let request = PostDatabaseRequest({name});\r\n  return ApiService.post(\"/database\", request).then(res => {\r\n    if (res.status === 200 || res.status === 201) {\r\n      console.log(res.data)\r\n      return res.data\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst getDetails = (id) => {\r\n  return ApiService.get(\"/database/\" + id).then(res => {\r\n    if (res.status === 200) {\r\n      let d = DbDetails(res.data)\r\n      console.log(d)\r\n      return d;\r\n    } else {\r\n      throw res\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst createGame = (databaseId) => {\r\n  let game = new Game();\r\n  return ApiService.post(\"/database/\" + databaseId + \"/game\", game).then(res => {\r\n    if (res.status === 200 || res.status === 201) {\r\n      let gameHeader = GameHeader({\r\n        whiteName: res.data.whiteName,\r\n        blackName: res.data.blackName,\r\n        id: res.data.id\r\n      })\r\n      return gameHeader;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst deleteDatabase = (databaseId) => {\r\n  return ApiService.delete(\"/database/\" + databaseId).then(res => {\r\n    if (res.status === 200) {\r\n      return true;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  });\r\n}\r\n\r\nconst importPgn = (databaseId, file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"pgnFile\", file, file.name);\r\n  return ApiService.post(\"/database/\" + databaseId + \"/uploadPgn\", formData).then(res => {\r\n    if (res.status !== 200 && res.status !== 201) {\r\n      throw res;\r\n    } else {\r\n      return GameHeader(...res.data);\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  listDatabases,\r\n  postDatabase,\r\n  getDetails,\r\n  createGame,\r\n  deleteDatabase,\r\n  importPgn\r\n}\r\n","import React from \"react\"\r\nimport {ModalWindow, showModal} from \"./Modal\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass ConfirmationModal extends ModalWindow {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onConfirm: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    confirmButtonText: PropTypes.string,\r\n    cancelButtonText: PropTypes.string,\r\n    confirmButtonClass: PropTypes.string\r\n  }\r\n\r\n  static defaultProps = {\r\n    title: \"Confirmation\",\r\n    message: \"Êtes-vous sûr ?\",\r\n    onConfirm: () => null,\r\n    onCancel: () => null,\r\n    confirmButtonText: \"Valider\",\r\n    cancelButtonText : \"Annuler\",\r\n    confirmButtonClass: \"is-success\"\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.onCancel();\r\n    this.close();\r\n  }\r\n\r\n  handleConfirm = () => {\r\n    this.props.onConfirm();\r\n    this.close();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal is-active\">\r\n        <div className=\"modal-background\" onClick={this.handleCancel}/>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">{this.props.title}</p>\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            <p>{this.props.message}</p>\r\n          </section>\r\n          <footer className=\"modal-card-foot space-between\">\r\n            <button className=\"button\" onClick={this.handleCancel}>{this.props.cancelButtonText}</button>\r\n            <button className={\"button \" + this.props.confirmButtonClass} onClick={this.handleConfirm}>\r\n              {this.props.confirmButtonText}\r\n            </button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport function showConfirmationModal(props) {\r\n  showModal(<ConfirmationModal {...props}/>)\r\n}\r\n","import React, {Component, useState} from 'react';\r\nimport './DatabaseList.scss';\r\nimport DatabaseService from \"./DatabaseService\";\r\nimport {showConfirmationModal} from \"../components/modal/ConfirmationModal\";\r\n\r\n\r\nconst DatabaseItem = (props) => {\r\n  function del(e) {\r\n    e.stopPropagation();\r\n    let properties = {\r\n      title: \"Suppression de la base \" + props.database.name,\r\n      message: \"Êtes vous sûr de vouloir supprimer la base \" + props.database.name,\r\n      confirmButtonText: \"Supprimer\",\r\n      confirmButtonClass: \"is-danger\",\r\n      onConfirm: () => {\r\n        const databaseId = props.database.id;\r\n        DatabaseService.deleteDatabase(databaseId).then(res => {\r\n          if (res) {\r\n            props.onDelete(databaseId)\r\n          }\r\n        })\r\n      }\r\n    }\r\n    showConfirmationModal(properties)\r\n  }\r\n\r\n  return (\r\n    <tr onClick={props.onClick}>\r\n      <td>{props.database.name}</td>\r\n      <td>{props.database.gameHeaders.length}</td>\r\n      <td></td>\r\n      <td>\r\n        <button className=\"button is-danger\" onClick={del}>Supprimer</button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nconst CreateDatabaseForm = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  function createDatabase() {\r\n    if (name.length === 0) {\r\n      return;\r\n    }\r\n    DatabaseService.postDatabase({name}).then(database => {\r\n      props.onDatabaseCreated(database)\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"field has-addons\">\r\n      <div className=\"control\">\r\n        <input className=\"input\" type=\"text\" placeholder=\"Créer une base\" value={name}\r\n               onChange={(e) => setName(e.target.value)}/>\r\n      </div>\r\n      <div className=\"control\" >\r\n        <span className=\"button is-success\" onClick={createDatabase} disabled={name.length === 0}>\r\n          Valider\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass DatabaseList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      databases: [],\r\n      loading: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    DatabaseService.listDatabases().then(databases => {\r\n      this.setState({\r\n        databases\r\n      })\r\n    });\r\n  }\r\n\r\n  onDatabaseCreated = (database) => {\r\n      let db = this.state.databases;\r\n      db.push(database);\r\n      this.setState({\r\n        databases: db\r\n      })\r\n  }\r\n\r\n  onDatabaseDeleted = (databaseId) => {\r\n    let db = this.state.databases;\r\n    db = db.filter(i => i.id !== databaseId);\r\n    this.setState({\r\n      databases: db\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreateDatabaseForm onDatabaseCreated={this.onDatabaseCreated}/>\r\n        <table className=\"databases table is-striped is-hoverable is-fullwidth\">\r\n          <thead>\r\n          <tr>\r\n            <th>Nom</th>\r\n            <th>Nombre de parties</th>\r\n            <th>Types</th>\r\n            <th/>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {this.state.databases && this.state.databases.map(database =>\r\n            <DatabaseItem database={database} key={database.id} onDelete={this.onDatabaseDeleted}\r\n                          onClick={() => this.props.history.push('/database/' + database.id)}/>)\r\n          }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DatabaseList;\r\n","export let WHITE = \"w\";\r\nexport let BLACK = \"b\";","import * as Constants from './Constants';\r\nexport default class Position{\r\n    constructor(fen, lastMove, previousPosition){\r\n        this.fen = fen;\r\n        this.lastMove = lastMove;\r\n        this.previousPosition = previousPosition;\r\n        this.nextPosition = null;\r\n        this.comment = \"\";\r\n        this.sublines = [];\r\n\r\n        if(this.previousPosition){\r\n            if(this.lastMove.color === 'w'){\r\n                this.moveNumber = this.previousPosition.moveNumber + 1;\r\n            }else{\r\n                this.moveNumber = this.previousPosition.moveNumber\r\n            }\r\n        }else{\r\n            this.moveNumber = 0\r\n        }\r\n    }\r\n\r\n    sideToMove() {\r\n        if(!this.lastMove || this.lastMove.color === Constants.BLACK)\r\n            return Constants.WHITE\r\n        else\r\n            return Constants.BLACK\r\n    }\r\n\r\n    addNextPosition(nextPosition){\r\n        if(!this.nextPosition){\r\n            this.nextPosition = nextPosition;\r\n            return\r\n        }\r\n        if(this.nextPosition.fen === nextPosition.fen){\r\n            return\r\n        }\r\n        if(!this.sublines.find(pos => pos.fen === nextPosition.fen)){\r\n            this.sublines.push(nextPosition)\r\n        }\r\n    }\r\n}\r\n","import Position from './Position'\r\n\r\nconst STARTING_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\r\nexport default class{\r\n    constructor(){\r\n        this.positions = [];\r\n        this.startingPosition = new Position(STARTING_FEN);\r\n        this.whiteName = \"white\"\r\n        this.blackName = \"black\"\r\n    }\r\n}"],"sourceRoot":""}