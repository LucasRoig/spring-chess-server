{"version":3,"sources":["GameView/TrainingFactory.js","GameView/TrainingView.js","components/modal/Modal.js"],"names":["TrainingFactory","lines","color","game","this","g","_","cloneDeep","parseLine","startingPosition","position","currentLine","arguments","length","undefined","currentPosition","push","sublines","sideToMove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","p","value","err","return","nextPosition","i","previousPosition","ConfigModal","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleStart","close","onStart","state","handleCancel","history","goBack","LIST_DATABASE","handleColorChanged","e","target","buildTraining","setState","createTraining","BLACK","showDemo","restartAfterError","_this2","react_default","a","createElement","className","whiteName","blackName","onChange","WHITE","type","checked","onClick","ModalWindow","EndTrainingModal","handleGoBack","_this3","handleRestart","onRestart","TrainingView","_this4","_ref","asyncToGenerator","regenerator_default","mark","_callee","line","sleep","wrap","_context","prev","duration","Promise","resolve","setTimeout","addPositionToNotation","demoDelay","stop","_x","apply","startLine","_callee4","restart","_context4","errorDuringLine","Game","gameLoop","nextLineIndex","currentLineIndex","_callee3","_context3","demoRunning","_callee2","_context2","showModal","TrainingView_EndTrainingModal","playerColor","gamePos","clone","onMove","source","chess","load","fen","move","from","to","promotion","console","error","lastMove","san","sloppy","log","flashBoard","goodMove","boardClass","showMove","alert","gameToTrain","totalLineCount","legalMoves","Chess","_this5","id","match","params","GameService","fetchGame","then","TrainingView_ConfigModal","config","prevProps","prevState","snapshot","calcLegalMoves","get","d","SQUARES","forEach","square","ms","moves","verbose","map","Fragment","onKeyDown","ChessgroundWrapper","orientation","movableColor","viewOnly","NotationView","handleClick","setPosition","makeMove","onContextualAction","handleContextualActionOnNotation","React","Component","_Component","_getPrototypeOf2","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_len","args","Array","_key","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","concat","document","getElementById","elementId","unmountComponentAtNode","parentNode","removeChild","removeElement","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","element","targetDiv","body","appendChild","render"],"mappings":"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","file":"static/js/9.558236c9.chunk.js","sourcesContent":["import _ from \"lodash\"\r\nexport default class TrainingFactory {\r\n  lines = []\r\n  color = null\r\n\r\n  createTraining(game, color) {\r\n    this.lines = [];\r\n    this.color = color;\r\n    let g = _.cloneDeep(game);\r\n    this.parseLine(g.startingPosition);\r\n    return this.lines;\r\n  }\r\n\r\n  parseLine(position, previousPositions = []) {\r\n    let currentLine = previousPositions;\r\n    let currentPosition = position;\r\n    while (currentPosition) {\r\n      currentLine.push(currentPosition);\r\n      if (currentPosition.sublines.length > 0 && currentPosition.sideToMove() !== this.color) {\r\n        for (let p of currentPosition.sublines) {\r\n          this.parseLine(_.cloneDeep(p), _.cloneDeep(currentLine));\r\n        }\r\n      }\r\n      currentPosition = currentPosition.nextPosition;\r\n    }\r\n    for (let i = 0; i < currentLine.length - 1; i++) {\r\n      currentLine[i].nextPosition = currentLine[i+1];\r\n      currentLine[i].sublines = [];\r\n      currentLine[i+1].previousPosition = currentLine[i];\r\n      currentLine[i+1].sublines = [];\r\n    }\r\n    this.lines.push(currentLine);\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport GameService from \"./GameService\";\r\nimport TrainingFactory from \"./TrainingFactory\";\r\nimport {BLACK, WHITE} from \"../models/Constants\";\r\nimport NotationView from \"./NotationView/NotationView\";\r\nimport Chess from \"chess.js\";\r\nimport Game from \"../models/Game\";\r\nimport _ from \"lodash\"\r\nimport './trainingview.scss'\r\nimport {ModalWindow, showModal} from \"../components/modal/Modal\";\r\nimport {LIST_DATABASE} from \"../Routes\";\r\nimport ChessgroundWrapper from \"./ChessBoard/ChessgroundWrapper\";\r\n\r\nclass ConfigModal extends ModalWindow {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: BLACK,\r\n      showDemo: true,\r\n      restartAfterError: true,\r\n      lines: this.buildTraining(BLACK)\r\n    }\r\n  }\r\n\r\n  handleStart = () => {\r\n    this.close();\r\n    this.props.onStart(this.state);\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.close();\r\n    if (this.props.history.length > 0) {\r\n      this.props.history.goBack();\r\n    } else {\r\n      this.props.history.push(LIST_DATABASE)\r\n    }\r\n  }\r\n\r\n  handleColorChanged = (e) => {\r\n    let color = e.target.value;\r\n    let lines = this.buildTraining(color);\r\n    this.setState({color, lines})\r\n  }\r\n\r\n  buildTraining = (color) => {\r\n    let t = new TrainingFactory();\r\n    return t.createTraining(this.props.game, color);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"/>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">Configuration de l'entraînement</p>\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            <h1 className=\"title\">{this.props.game.whiteName + (this.props.game.blackName ? \" - \" + this.props.game.blackName : \"\")}</h1>\r\n            <h2 className=\"subtitle\">Nombre de lignes : {this.state.lines.length}</h2>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Couleur du joueur</label>\r\n              <div className=\"control\">\r\n                <div className=\"select is-fullwidth\">\r\n                  <select value={this.state.color} onChange={this.handleColorChanged}>\r\n                    <option value={WHITE}>Blanc</option>\r\n                    <option value={BLACK}>Noir</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <label className=\"checkbox\">\r\n                  <input type=\"checkbox\" checked={this.state.showDemo} onChange={(e) => this.setState({showDemo: e.target.checked})}/>\r\n                  {\"    Montrer la ligne en premier\"}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <label className=\"checkbox\">\r\n                  <input type=\"checkbox\" checked={this.state.restartAfterError} onChange={e => this.setState({restartAfterError: e.target.checked})}/>\r\n                  {\"    Recommencer après une erreur\"}\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <footer className=\"modal-card-foot space-between\">\r\n            <button className=\"button\" onClick={this.handleCancel}>Annuler</button>\r\n            <button className=\"button is-success\" onClick={this.handleStart}>Démarrer</button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass EndTrainingModal extends ModalWindow {\r\n  handleGoBack = () => {\r\n    this.close();\r\n    if (this.props.history.length > 0) {\r\n      this.props.history.goBack();\r\n    } else {\r\n      this.props.history.push(LIST_DATABASE)\r\n    }\r\n  }\r\n  handleRestart = () => {\r\n    this.close();\r\n    this.props.onRestart();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"/>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">Entraînement terminé</p>\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            L'entraînement est terminé. Vous pouvez recommencer ou retourner à la page précédente.\r\n          </section>\r\n          <footer className=\"modal-card-foot space-between\">\r\n            <button className=\"button\" onClick={this.handleGoBack}>Retour</button>\r\n            <button className=\"button is-success\" onClick={this.handleRestart}>Recommencer</button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class TrainingView extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      gameToTrain: null,\r\n      currentPosition: null,\r\n      currentLine: null,\r\n      playerColor: BLACK,\r\n      game: new Game(),\r\n      totalLineCount: 0,\r\n      currentLineIndex: 1,\r\n      boardClass: \"\",\r\n      demoRunning: false,\r\n      errorDuringLine: false,\r\n      showDemo: true,\r\n      demoDelay: 800,\r\n      restartAfterError: true,\r\n      legalMoves:{}\r\n    }\r\n    this.chess = new Chess();\r\n    this.lines = [];\r\n    this.nextLineIndex = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    GameService.fetchGame(id).then(game => {\r\n      const start = (config) => {\r\n        this.lines = config.lines;\r\n        this.setState({\r\n          playerColor: config.color,\r\n          totalLineCount: this.lines.length,\r\n          showDemo: config.showDemo,\r\n          restartAfterError: config.restartAfterError\r\n        }, this.startLine)\r\n      }\r\n      showModal(<ConfigModal onStart={start} game={game} history={this.props.history}/>)\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.currentPosition !== prevState.currentPosition) {\r\n      this.calcLegalMoves();\r\n    }\r\n  }\r\n\r\n  calcLegalMoves() {\r\n    if (! (this.state.currentPosition && this.state.currentPosition.fen)) {\r\n      return;\r\n    }\r\n    const legalMoves = {get : d => legalMoves[d]};\r\n    let chess = new Chess();\r\n    chess.load(this.state.currentPosition.fen);\r\n    chess.SQUARES.forEach(square => {\r\n      const ms = chess.moves({square, verbose: true})\r\n      if (ms.length > 0) {\r\n        legalMoves[square] = ms.map(move => move.to)\r\n      }\r\n    })\r\n    this.setState({legalMoves})\r\n  }\r\n\r\n\r\n  showDemo = async (line) => {\r\n    function sleep(duration) {\r\n      return new Promise(resolve => setTimeout(resolve, duration));\r\n    }\r\n\r\n    let currentPosition = line[0];\r\n    while (currentPosition) {\r\n      this.setState({currentPosition})\r\n      if (currentPosition.previousPosition) {\r\n        this.addPositionToNotation(currentPosition)\r\n      }\r\n      await sleep(this.state.demoDelay);\r\n      currentPosition = currentPosition.nextPosition\r\n    }\r\n  }\r\n\r\n  startLine = async () => {\r\n    if (this.state.errorDuringLine && this.state.restartAfterError) {\r\n      this.setState({\r\n        currentPosition: this.state.currentLine[0],\r\n        game: new Game(),\r\n        errorDuringLine: false\r\n      }, this.gameLoop)\r\n    } else if (this.nextLineIndex < this.lines.length) {\r\n      let line = this.lines[this.nextLineIndex];\r\n      this.nextLineIndex++;\r\n      this.setState({\r\n        currentPosition: line[0],\r\n        currentLine: line,\r\n        currentLineIndex: this.nextLineIndex,\r\n        game: new Game(),\r\n        errorDuringLine: false\r\n      }, async () => {\r\n        if (this.state.showDemo) {\r\n          this.setState({demoRunning: true}, async () => {\r\n            await this.showDemo(line)\r\n            this.setState({currentPosition: line[0], game: new Game(), demoRunning:false}, this.gameLoop)\r\n          })\r\n        } else {\r\n          this.gameLoop()\r\n        }\r\n      })\r\n    } else {\r\n      const restart = () => {\r\n        this.nextLineIndex = 0;\r\n        this.setState({currentLineIndex: 1}, this.startLine)\r\n      }\r\n      showModal(<EndTrainingModal history={this.props.history} onRestart={restart}/>)\r\n    }\r\n  }\r\n\r\n  gameLoop = () => {\r\n    let currentPosition = this.state.currentPosition;\r\n    if (!currentPosition.nextPosition) {\r\n      setTimeout(this.startLine, 1000)\r\n    } else if (currentPosition.sideToMove() !== this.state.playerColor) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          currentPosition: currentPosition.nextPosition\r\n        })\r\n        this.addPositionToNotation(currentPosition.nextPosition);\r\n        currentPosition = this.state.currentPosition;\r\n        if (!currentPosition.nextPosition) {\r\n          setTimeout(this.startLine, 1000)\r\n        }\r\n      }, 300)\r\n    }\r\n  }\r\n\r\n  addPositionToNotation = (position) => {\r\n    let gamePos = this.state.game.startingPosition;\r\n    while (gamePos.nextPosition) {\r\n      gamePos = gamePos.nextPosition;\r\n    }\r\n    let clone = _.cloneDeep(position);\r\n    gamePos.nextPosition = clone;\r\n    clone.previousPosition = gamePos;\r\n    clone.nextPosition = null;\r\n    this.setState({\r\n      game: this.state.game\r\n    })\r\n  }\r\n\r\n  onMove = (source, target) => {\r\n    const currentPosition = this.state.currentPosition;\r\n    this.chess.load(currentPosition.fen);\r\n    let move = this.chess.move({\r\n      from: source,\r\n      to: target,\r\n      promotion: 'q' // NOTE: always promote to a queen for example simplicity\r\n    });\r\n    if (!move) {\r\n      console.error(\"Error illegal move\")\r\n    }\r\n    if (!currentPosition.nextPosition) {\r\n      console.error(\"Error no next position\")\r\n    }\r\n    this.chess.load(currentPosition.fen);\r\n    let wantedMove = this.chess.move(currentPosition.nextPosition.lastMove.san, {sloppy: true});\r\n    if (wantedMove.san !== move.san) {\r\n      //WRONG MOVE\r\n      console.log(\"expected move : \" + currentPosition.nextPosition.lastMove.san, \"user move : \" + move.san);\r\n      this.flashBoard(false);\r\n      this.setState({errorDuringLine: true})\r\n    } else {\r\n      //GOOD MOVE\r\n        this.setState({\r\n          currentPosition: currentPosition.nextPosition,\r\n        })\r\n        this.flashBoard(true);\r\n        this.addPositionToNotation(currentPosition.nextPosition)\r\n      this.gameLoop()\r\n    }\r\n  }\r\n\r\n  flashBoard = (goodMove) => {\r\n    let className = goodMove ? \"rightMove\" : \"wrongMove\";\r\n    this.setState({\r\n      boardClass: className\r\n    })\r\n    setTimeout(() => this.setState({boardClass: \"\"}), 500)\r\n  }\r\n\r\n  showMove = () => {\r\n    if (this.state.currentPosition.nextPosition && !this.state.demoRunning){\r\n      alert(this.state.currentPosition.nextPosition.lastMove.san)\r\n      this.setState({errorDuringLine: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          {this.state.currentPosition ?\r\n              <div className=\"training-view\" onKeyDown={this.onKeyDown}>\r\n                <div className=\"game-column\">\r\n                  <ChessgroundWrapper\r\n                      className={this.state.boardClass}\r\n                      orientation={this.state.playerColor === WHITE ? \"white\" : \"black\"}\r\n                      movableColor={this.state.playerColor === WHITE ? \"white\" : \"black\"}\r\n                      onMove={this.onMove}\r\n                      legalMoves={this.state.legalMoves}\r\n                      viewOnly={this.state.demoRunning}\r\n                      position={this.state.currentPosition.fen}\r\n                  />\r\n                  <button className={\"button\"} onClick={this.showMove}>Show Move</button>\r\n                </div>\r\n                <div className=\"notation-column\">\r\n                  <div>Ligne {this.state.currentLineIndex} / {this.state.totalLineCount}</div>\r\n                  <NotationView game={this.state.game}\r\n                                handleClick={this.setPosition}\r\n                                currentPosition={this.state.currentPosition}\r\n                                makeMove={this.makeMove}\r\n                                onContextualAction={this.handleContextualActionOnNotation}/>\r\n                </div>\r\n              </div>\r\n              : <div>loading</div>}\r\n        </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {render, unmountComponentAtNode} from \"react-dom\"\r\n\r\nexport class ModalWindow extends Component {\r\n  close = () => {\r\n    removeElement();\r\n  }\r\n}\r\n\r\nconst elementId = \"modal-window\";\r\n\r\nfunction removeElement() {\r\n  const target = document.getElementById(elementId);\r\n  if (target) {\r\n    unmountComponentAtNode(target);\r\n    target.parentNode.removeChild(target);\r\n  }\r\n}\r\n\r\n\r\nfunction createElement(element) {\r\n  let targetDiv = document.getElementById(elementId);\r\n  if (!targetDiv) {\r\n    targetDiv = document.createElement(\"div\");\r\n    targetDiv.id = elementId;\r\n    document.body.appendChild(targetDiv)\r\n  }\r\n  render(element, targetDiv);\r\n}\r\n\r\nexport function showModal(element) {\r\n  createElement(element);\r\n}\r\n"],"sourceRoot":""}