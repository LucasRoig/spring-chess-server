{"version":3,"sources":["components/FormField.js","auth/AuthService.js","auth/LoginPage.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","FormField","_ref","label","_ref$control","control","a","createElement","className","type","React","cloneElement","_services_ApiService__WEBPACK_IMPORTED_MODULE_0__","tcomb__WEBPACK_IMPORTED_MODULE_1__","tcomb__WEBPACK_IMPORTED_MODULE_1___default","_services_HistoryProvider__WEBPACK_IMPORTED_MODULE_2__","_Routes__WEBPACK_IMPORTED_MODULE_3__","_store__WEBPACK_IMPORTED_MODULE_4__","_store_AuthReducer__WEBPACK_IMPORTED_MODULE_5__","LoginRequest","t","struct","email","String","password","LoginResponse","token","SignUpRequest","username","SignUpResponse","user","Object","__webpack_exports__","login","handleInvalidCredentials","request","ApiService","post","then","res","status","response","data","store","dispatch","loginSuccessAction","HistoryProvider","getHistory","push","LIST_DATABASE","signUp","_ref2","handleError","console","log","catch","e","BASE_STATE","errors","LoginPage","props","_this","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleChange","event","name","target","setState","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","value","handleSubmit","preventDefault","AuthService","state","setErrors","boolean","react__WEBPACK_IMPORTED_MODULE_6___default","onSubmit","style","maxWidth","margin","_components_FormField__WEBPACK_IMPORTED_MODULE_7__","required","onChange","Component"],"mappings":"2FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAeeI,IAbG,SAAAC,GAAA,IACGC,EADHD,EACGC,MADHC,EAAAF,EAEGG,eAFH,IAAAD,EAEaL,EAAAO,EAAAC,cAAA,SAAOC,UAAU,QAAQC,KAAK,SAF3CL,EAAA,OAIhBL,EAAAO,EAAAC,cAAA,OAAKC,UAAU,SACZL,GAASJ,EAAAO,EAAAC,cAAA,SAAOC,UAAU,SAASL,GAEpCJ,EAAAO,EAAAC,cAAA,OAAKC,UAAU,WACZE,IAAMC,aAAaN,wCCV1B,IAAAO,EAAAd,EAAA,IAAAe,EAAAf,EAAA,IAAAgB,EAAAhB,EAAAE,EAAAa,GAAAE,EAAAjB,EAAA,IAAAkB,EAAAlB,EAAA,GAAAmB,EAAAnB,EAAA,IAAAoB,EAAApB,EAAA,IAOMqB,EAAeC,IAAEC,OAAO,CAC5BC,MAAOF,IAAEG,OACTC,SAAUJ,IAAEG,QACX,gBAEGE,EAAgBL,IAAEC,OAAO,CAC7BK,MAAON,IAAEG,QACR,iBAEGI,EAAgBP,IAAEC,OAAO,CAC7BC,MAAOF,IAAEG,OACTC,SAAUJ,IAAEG,OACZK,SAAUR,IAAEG,SAERM,EAAiBT,IAAEC,OAAO,CAC9BK,MAAON,IAAEG,OACTO,KAAMV,IAAEW,SAEKC,EAAA,GACbC,MAAO,SAAA/B,GAAiD,IAA/CoB,EAA+CpB,EAA/CoB,MAAOE,EAAwCtB,EAAxCsB,SAAUU,EAA8BhC,EAA9BgC,yBAClBC,EAAUhB,EAAa,CAACG,QAAOE,aACnCY,IAAWC,KAAK,SAAUF,GAASG,KAAK,SAAAC,GACtC,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5BN,QACK,IAAmB,MAAfK,EAAIC,OAKb,MAAMD,EAJN,IAAIE,EAAWhB,EAAcc,EAAIG,MACjCC,IAAMC,SAASC,YAAmBJ,EAASf,QAC3CoB,IAAgBC,aAAaC,KAAKC,SAM1CC,OAAQ,SAAAC,GAA8C,IAA5C7B,EAA4C6B,EAA5C7B,MAAOE,EAAqC2B,EAArC3B,SAAUI,EAA2BuB,EAA3BvB,SAAUwB,EAAiBD,EAAjBC,YAC7BjB,EAAUR,EAAc,CAACL,QAAOE,WAAUI,aAChDQ,IAAWC,KAAK,eAAgBF,GAASG,KAAK,SAAAC,GAE5C,GADAc,QAAQC,IAAIf,EAAIC,QACG,MAAfD,EAAIC,QAAiC,MAAfD,EAAIC,OAAgB,CAC5C,IAAMC,EAAWZ,EAAeU,EAAIG,MACpCC,IAAMC,SAASC,YAAmBJ,EAASf,QAC3CoB,IAAgBC,aAAaC,KAAKC,UAElCG,MAEDG,MAAM,SAAAC,GACPJ,uIChDAK,EAAa,CACjBnC,MAAM,GACNE,SAAS,GACTkC,QAAQ,GAGJC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA9B,OAAA+B,EAAA,EAAA/B,CAAAgC,KAAAJ,IACjBE,EAAA9B,OAAAiC,EAAA,EAAAjC,CAAAgC,KAAAhC,OAAAkC,EAAA,EAAAlC,CAAA4B,GAAAO,KAAAH,KAAMH,KAIRO,aAAe,SAACC,GACZ,IAAMC,EAAOD,EAAME,OAAOD,KAC1BR,EAAKU,SAALxC,OAAAyC,EAAA,EAAAzC,CAAA,GACGsC,EAAOD,EAAME,OAAOG,SARRZ,EAYnBa,aAAe,SAAClB,GACdA,EAAEmB,iBACFC,IAAY3C,MAAM,CAChBX,MAAOuC,EAAKgB,MAAMvD,MAClBE,SAAUqC,EAAKgB,MAAMrD,SACrBU,yBAA0B2B,EAAKiB,WAAU,MAjB1BjB,EAqBnBiB,UAAY,SAACC,GAAD,OAAa,kBAAMlB,EAAKU,SAAS,CAACb,OAAQqB,MAnBpDlB,EAAKgB,MAAQpB,EAFII,wEAwBjB,OACEmB,EAAA1E,EAAAC,cAAA,QAAM0E,SAAUlB,KAAKW,aAAcQ,MAAO,CAACC,SAAU,QAASC,OAAO,SACnEJ,EAAA1E,EAAAC,cAAC8E,EAAA,EAAD,CAAWlF,MAAM,QACNE,QAAS2E,EAAA1E,EAAAC,cAAA,SAAO8D,KAAK,QAAQ7D,UAAU,QAAQC,KAAK,QAAQ6E,UAAQ,EAACC,SAAUxB,KAAKI,aAAcM,MAAOV,KAAKc,MAAMvD,UAE/H0D,EAAA1E,EAAAC,cAAC8E,EAAA,EAAD,CAAWlF,MAAM,WACNE,QAAS2E,EAAA1E,EAAAC,cAAA,SAAO8D,KAAK,WAAW7D,UAAU,QAAQC,KAAK,WAAW6E,UAAQ,EAACC,SAAUxB,KAAKI,aAAcM,MAAOV,KAAKc,MAAMrD,aAErIwD,EAAA1E,EAAAC,cAAC8E,EAAA,EAAD,CAAWhF,QAAS2E,EAAA1E,EAAAC,cAAA,UAAQC,UAAU,iBAAiBC,KAAK,UAAxC,aACnBsD,KAAKc,MAAMnB,QAAUsB,EAAA1E,EAAAC,cAAA,OAAKC,UAAU,mCAAf,gDAlCNgF,aAwCT7B","file":"static/js/11.3dd08f14.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FormField = ({\r\n                     label,\r\n                     control = <input className=\"input\" type=\"text\"/>\r\n}) => (\r\n  <div className=\"field\">\r\n    {label && <label className=\"label\">{label}</label>}\r\n\r\n    <div className=\"control\">\r\n      {React.cloneElement(control)}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default FormField;\r\n","import ApiService from \"../services/ApiService\";\r\nimport t from \"tcomb\";\r\nimport HistoryProvider from \"../services/HistoryProvider\";\r\nimport {LIST_DATABASE} from \"../Routes\";\r\nimport store from \"../store\";\r\nimport {loginSuccessAction} from \"../store/AuthReducer\";\r\n\r\nconst LoginRequest = t.struct({\r\n  email: t.String,\r\n  password: t.String\r\n}, \"LoginRequest\")\r\n\r\nconst LoginResponse = t.struct({\r\n  token: t.String\r\n}, \"LoginResponse\")\r\n\r\nconst SignUpRequest = t.struct({\r\n  email: t.String,\r\n  password: t.String,\r\n  username: t.String\r\n})\r\nconst SignUpResponse = t.struct({\r\n  token: t.String,\r\n  user: t.Object\r\n})\r\nexport default {\r\n  login: ({email, password, handleInvalidCredentials}) => {\r\n    const request = LoginRequest({email, password});\r\n      ApiService.post(\"/login\", request).then(res => {\r\n        if (res.status === 401 || res.status === 403) {\r\n          handleInvalidCredentials();\r\n        } else if (res.status === 200) {\r\n          let response = LoginResponse(res.data)\r\n          store.dispatch(loginSuccessAction(response.token));\r\n          HistoryProvider.getHistory().push(LIST_DATABASE)\r\n        } else {\r\n          throw res\r\n        }\r\n      })\r\n  },\r\n  signUp: ({email, password, username, handleError}) => {\r\n    const request = SignUpRequest({email, password, username});\r\n    ApiService.post(\"/user/signup\", request).then(res => {\r\n      console.log(res.status);\r\n      if (res.status === 200 || res.status === 201) {\r\n        const response = SignUpResponse(res.data);\r\n        store.dispatch(loginSuccessAction(response.token));\r\n        HistoryProvider.getHistory().push(LIST_DATABASE)\r\n      } else {\r\n        handleError();\r\n      }\r\n    }).catch(e => {\r\n      handleError();\r\n    })\r\n  }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport FormField from \"../components/FormField\";\r\nimport AuthService from \"./AuthService\";\r\n\r\nconst BASE_STATE = {\r\n  email:\"\",\r\n  password:\"\",\r\n  errors: false\r\n}\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = BASE_STATE;\r\n  }\r\n\r\n  handleChange = (event) => {\r\n      const name = event.target.name;\r\n      this.setState({\r\n        [name]: event.target.value\r\n      });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    AuthService.login({\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      handleInvalidCredentials: this.setErrors(true)\r\n    });\r\n  }\r\n\r\n  setErrors = (boolean) => () => this.setState({errors: boolean});\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} style={{maxWidth: \"500px\", margin:\"auto\"}}>\r\n        <FormField label=\"Email\"\r\n                   control={<input name=\"email\" className=\"input\" type=\"email\" required onChange={this.handleChange} value={this.state.email}/>}\r\n        />\r\n        <FormField label=\"Password\"\r\n                   control={<input name=\"password\" className=\"input\" type=\"password\" required onChange={this.handleChange} value={this.state.password}/>}\r\n        />\r\n        <FormField control={<button className=\"button is-link\" type=\"submit\">Valider</button>}/>\r\n        {this.state.errors && <div className=\"notification is-danger is-light\">Identifiant ou mot de passe invalide</div>}\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}