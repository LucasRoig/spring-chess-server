{"version":3,"sources":["GameView/GameService.js","database/DbDetails.js","components/modal/ConfirmationModal.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","database/DatabaseService.js","database/DatabaseDetails.js","models/Constants.js","models/Position.js","models/Game.js","components/modal/Modal.js"],"names":["GameToDto","_this","this","Object","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","gameToDto","game","dto","blackName","whiteName","positions","id","visitPosition","startingPosition","position","gameDto","positionIndex","counter","commentAfter","comment","fen","lastMoveSan","lastMove","san","nextPosition","nextDto","sublines","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","variation","value","variationDto","push","err","return","length","join","DtoToGame","Game","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","p","parsePosition","positionsArray","index","previousPosition","move","parseMove","Position","nextPos","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","split","i","parseInt","positionDto","color","__webpack_exports__","fetchGame","ApiService","get","then","res","status","dtoToGame","data","console","log","catch","e","error","saveGame","post","deleteGame","delete","__webpack_require__","d","GameHeader","DbDetails","tcomb__WEBPACK_IMPORTED_MODULE_0__","tcomb__WEBPACK_IMPORTED_MODULE_0___default","n","t","struct","String","Number","name","gameHeaders","list","ConfirmationModal","handleCancel","props","onCancel","close","handleConfirm","onConfirm","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","onClick","title","message","cancelButtonText","confirmButtonClass","confirmButtonText","ModalWindow","showConfirmationModal","showModal","propTypes","PropTypes","string","func","defaultProps","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","PostDatabaseRequest","listDatabases","postDatabase","_ref","request","getDetails","createGame","databaseId","deleteDatabase","importPgn","file","formData","FormData","append","apply","GameDetails","stopPropagation","history","onDelete","DatabaseDetails","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","DatabaseService","state","database","db","setState","update","$push","properties","GameService","indexOf","$splice","onFileChanged","selectedPgn","target","files","uploadPgn","g","_this2","match","params","_this3","Fragment","type","onChange","map","key","Component","WHITE","BLACK","moveNumber","Constants","find","pos","_default","_Component","_getPrototypeOf2","_len","arguments","args","_key","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","concat","document","getElementById","elementId","unmountComponentAtNode","parentNode","removeChild","removeElement","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","element","targetDiv","body","appendChild","render"],"mappings":"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","file":"static/js/6.5cff89ca.chunk.js","sourcesContent":["import ApiService from \"../services/ApiService\";\r\nimport Game from \"../models/Game\";\r\nimport Position from \"../models/Position\";\r\n\r\nclass GameToDto {\r\n  constructor() {\r\n    this.counter = 0;\r\n  }\r\n\r\n  gameToDto = (game) => {\r\n    const dto = {};\r\n    dto.blackName = game.blackName;\r\n    dto.whiteName = game.whiteName;\r\n    dto.positions = [];\r\n    if (game.id && game.id >= 0) {\r\n      dto.id = game.id;\r\n    }\r\n    this.visitPosition(game.startingPosition, dto);\r\n    return dto;\r\n  }\r\n\r\n  visitPosition = (position, gameDto) => {\r\n    const dto = {};\r\n    dto.positionIndex = this.counter;\r\n    this.counter++;\r\n    dto.commentAfter = position.comment;\r\n    dto.fen = position.fen;\r\n    dto.lastMoveSan = position.lastMove ? position.lastMove.san : \"\";\r\n    if (position.nextPosition) {\r\n      let nextDto = this.visitPosition(position.nextPosition, gameDto);\r\n      dto.nextPosition = nextDto.positionIndex;\r\n    }\r\n    let sublines = [];\r\n    for (let variation of position.sublines) {\r\n      let variationDto = this.visitPosition(variation, gameDto);\r\n      sublines.push(variationDto.positionIndex);\r\n    }\r\n    if (sublines.length === 0) {\r\n      dto.sublines = \"\";\r\n    } else {\r\n      dto.sublines = sublines.join(\";\");\r\n    }\r\n    gameDto.positions.push(dto);\r\n    return dto;\r\n  }\r\n}\r\n\r\nclass DtoToGame {\r\n  dtoToGame(dto) {\r\n    let game = new Game();\r\n    game.whiteName = dto.whiteName;\r\n    game.blackName = dto.blackName;\r\n    game.id = dto.id;\r\n    if (dto.positions.length > 0) {\r\n      let positions = [];\r\n      for (let p of dto.positions) {\r\n        positions[p.positionIndex] = p;\r\n      }\r\n      game.startingPosition = this.parsePosition(positions, 0);\r\n    }\r\n    return game;\r\n  }\r\n\r\n  parsePosition(positionsArray, index, previousPosition) {\r\n    let dto = positionsArray[index];\r\n    let move = index > 0 ? this.parseMove(dto) : undefined;\r\n    let position = new Position(dto.fen, move, previousPosition);\r\n    position.comment = dto.commentAfter;\r\n    if (dto.nextPosition > 0) {\r\n      let nextPos = this.parsePosition(positionsArray, dto.nextPosition, position);\r\n      position.nextPosition = nextPos;\r\n    }\r\n    if (dto.sublines.length > 0) {\r\n      for (let i of dto.sublines.split(\";\")) {\r\n        let nextPos = this.parsePosition(positionsArray, parseInt(i), position);\r\n        position.sublines.push(nextPos);\r\n      }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  parseMove(positionDto) {\r\n    let san = positionDto.lastMoveSan;\r\n    const nextColor = positionDto.fen.split(' ')[1];\r\n    let color = nextColor === \"b\" ? \"w\" : \"b\";\r\n    return {san, color}\r\n  }\r\n}\r\n\r\nconst fetchGame = (id) => {\r\n  return ApiService.get(\"/game/\" + id).then(res => {\r\n    if (res.status === 200) {\r\n      const game = new DtoToGame().dtoToGame(res.data);\r\n      console.log(game)\r\n      return game;\r\n    } else {\r\n      throw res\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst saveGame = (game) => {\r\n  let dto = new GameToDto().gameToDto(game);\r\n  console.log(dto)\r\n  return ApiService.post(\"/game/\" + game.id, dto).then(res => {\r\n    if (res.status !== 200) {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst deleteGame = game => {\r\n  return ApiService.delete(\"/game/\" + game.id).then(res => {\r\n    if (res.status !== 200) {\r\n      throw res;\r\n    }\r\n    return true;\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nexport default {\r\n  fetchGame,\r\n  saveGame,\r\n  deleteGame\r\n}\r\n","import t from \"tcomb\";\r\n\r\nexport const GameHeader = t.struct({\r\n  whiteName: t.String,\r\n  blackName: t.String,\r\n  id: t.Number\r\n})\r\nexport const DbDetails = t.struct({\r\n  name: t.String,\r\n  id: t.Number,\r\n  gameHeaders: t.list(GameHeader)\r\n})\r\n","import React from \"react\"\r\nimport {ModalWindow, showModal} from \"./Modal\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass ConfirmationModal extends ModalWindow {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onConfirm: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    confirmButtonText: PropTypes.string,\r\n    cancelButtonText: PropTypes.string,\r\n    confirmButtonClass: PropTypes.string\r\n  }\r\n\r\n  static defaultProps = {\r\n    title: \"Confirmation\",\r\n    message: \"Êtes-vous sûr ?\",\r\n    onConfirm: () => null,\r\n    onCancel: () => null,\r\n    confirmButtonText: \"Valider\",\r\n    cancelButtonText : \"Annuler\",\r\n    confirmButtonClass: \"is-success\"\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.onCancel();\r\n    this.close();\r\n  }\r\n\r\n  handleConfirm = () => {\r\n    this.props.onConfirm();\r\n    this.close();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal is-active\">\r\n        <div className=\"modal-background\" onClick={this.handleCancel}/>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">{this.props.title}</p>\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            <p>{this.props.message}</p>\r\n          </section>\r\n          <footer className=\"modal-card-foot space-between\">\r\n            <button className=\"button\" onClick={this.handleCancel}>{this.props.cancelButtonText}</button>\r\n            <button className={\"button \" + this.props.confirmButtonClass} onClick={this.handleConfirm}>\r\n              {this.props.confirmButtonText}\r\n            </button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport function showConfirmationModal(props) {\r\n  showModal(<ConfirmationModal {...props}/>)\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import ApiService from \"../services/ApiService\";\r\nimport t from \"tcomb\";\r\nimport Game from \"../models/Game\";\r\nimport {DbDetails, GameHeader} from \"./DbDetails\";\r\n\r\nconst listDatabases = () => {\r\n  return ApiService.get(\"/database\").then(res => {\r\n    if (res.status === 200) {\r\n      return res.data;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).then(data => {\r\n    console.log(data)\r\n    return data\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst PostDatabaseRequest = t.struct({\r\n  name: t.String,\r\n}, \"PostDatabaseRequest\")\r\n\r\nconst postDatabase = ({name}) => {\r\n  let request = PostDatabaseRequest({name});\r\n  return ApiService.post(\"/database\", request).then(res => {\r\n    if (res.status === 200 || res.status === 201) {\r\n      console.log(res.data)\r\n      return res.data\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst getDetails = (id) => {\r\n  return ApiService.get(\"/database/\" + id).then(res => {\r\n    if (res.status === 200) {\r\n      let d = DbDetails(res.data)\r\n      console.log(d)\r\n      return d;\r\n    } else {\r\n      throw res\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst createGame = (databaseId) => {\r\n  let game = new Game();\r\n  return ApiService.post(\"/database/\" + databaseId + \"/game\", game).then(res => {\r\n    if (res.status === 200 || res.status === 201) {\r\n      let gameHeader = GameHeader({\r\n        whiteName: res.data.whiteName,\r\n        blackName: res.data.blackName,\r\n        id: res.data.id\r\n      })\r\n      return gameHeader;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst deleteDatabase = (databaseId) => {\r\n  return ApiService.delete(\"/database/\" + databaseId).then(res => {\r\n    if (res.status === 200) {\r\n      return true;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  });\r\n}\r\n\r\nconst importPgn = (databaseId, file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"pgnFile\", file, file.name);\r\n  return ApiService.post(\"/database/\" + databaseId + \"/uploadPgn\", formData).then(res => {\r\n    if (res.status !== 200 && res.status !== 201) {\r\n      throw res;\r\n    } else {\r\n      return GameHeader(...res.data);\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  listDatabases,\r\n  postDatabase,\r\n  getDetails,\r\n  createGame,\r\n  deleteDatabase,\r\n  importPgn\r\n}\r\n","import React, {Component} from 'react';\r\nimport './DatabaseList.scss';\r\nimport DatabaseService from \"./DatabaseService\";\r\nimport {DbDetails} from \"./DbDetails\";\r\nimport GameService from \"../GameView/GameService\";\r\nimport {showConfirmationModal} from \"../components/modal/ConfirmationModal\";\r\n\r\nconst GameDetails = (props) => {\r\n  function handleTraining(e) {\r\n    e.stopPropagation();\r\n    props.history.push(\"/training/\" + props.game.id);\r\n  }\r\n  function handleDelete(e) {\r\n    props.onDelete(props.game);\r\n    e.stopPropagation();\r\n  }\r\n  return (\r\n    <tr onClick={props.onClick}>\r\n      <td>{props.game.whiteName}</td>\r\n      <td>{props.game.blackName}</td>\r\n      <td></td>\r\n      <td>\r\n        <button className=\"button\" onClick={handleTraining}>Training</button>\r\n        <button className=\"button is-danger\" onClick={handleDelete}>Supprimer</button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nclass DatabaseDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      database: null,\r\n      selectedPgn: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    DatabaseService.getDetails(this.props.match.params.id).then(database => {\r\n      console.log(database)\r\n      this.setState({database})\r\n    })\r\n  }\r\n\r\n  createGame = () => {\r\n    DatabaseService.createGame(this.state.database.id).then(game => {\r\n      let db = this.state.database;\r\n      this.setState({\r\n        database: DbDetails.update(db, {gameHeaders: {$push: [game]}})\r\n      })\r\n    });\r\n  }\r\n\r\n  deleteGame = (game) => {\r\n    let properties = {\r\n      title: \"Suppression de la partie \" + game.whiteName + \" - \" + game.blackName,\r\n      message: \"Êtes vous sûr de vouloir supprimer la partie \" + game.whiteName + \" - \" + game.blackName,\r\n      confirmButtonText: \"Supprimer\",\r\n      confirmButtonClass: \"is-danger\",\r\n      onConfirm: () => {\r\n        GameService.deleteGame(game).then(res => {\r\n          if (res) {\r\n            let db = this.state.database;\r\n            let i = db.gameHeaders.indexOf(game);\r\n            if (i >= 0) {\r\n              this.setState({\r\n                database: DbDetails.update(db, {gameHeaders: {$splice: [[i,1]]}})\r\n              })\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n    showConfirmationModal(properties)\r\n\r\n  }\r\n\r\n  onFileChanged = (e) => {\r\n    this.setState({selectedPgn: e.target.files[0]})\r\n  }\r\n\r\n  uploadPgn = () => {\r\n    const selectedPgn = this.state.selectedPgn;\r\n    if (selectedPgn) {\r\n      DatabaseService.importPgn(this.state.database.id, selectedPgn).then(g => {\r\n        let db = this.state.database;\r\n        this.setState({\r\n          database: DbDetails.update(db, {gameHeaders: {$push: [g]}})\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.database ?\r\n          <>\r\n            <h1 className=\"title is-1\">{this.state.database.name}</h1>\r\n            <div>\r\n              <button className=\"button\" onClick={this.createGame}>Add new Game</button>\r\n            </div>\r\n            <div>\r\n              <input type=\"file\" onChange={this.onFileChanged}/>\r\n              <button className=\"button\" onClick={this.uploadPgn}>Importer</button>\r\n            </div>\r\n            <table className=\"databases table is-striped is-hoverable is-fullwidth\">\r\n              <thead>\r\n              <tr>\r\n                <th>White</th>\r\n                <th>Black</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {this.state.database.gameHeaders.map(game =>\r\n                <GameDetails key={game.id} game={game}\r\n                             onClick={() => this.props.history.push(\"/game/\" + game.id)}\r\n                             onDelete={this.deleteGame}\r\n                             history={this.props.history}/>)\r\n              }\r\n              </tbody>\r\n            </table>\r\n          </>\r\n          : <div>Loading</div>}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DatabaseDetails;\r\n","export let WHITE = \"w\";\r\nexport let BLACK = \"b\";","import * as Constants from './Constants';\r\nexport default class Position{\r\n    constructor(fen, lastMove, previousPosition){\r\n        this.fen = fen;\r\n        this.lastMove = lastMove;\r\n        this.previousPosition = previousPosition;\r\n        this.nextPosition = null;\r\n        this.comment = \"\";\r\n        this.sublines = [];\r\n\r\n        if(this.previousPosition){\r\n            if(this.lastMove.color === 'w'){\r\n                this.moveNumber = this.previousPosition.moveNumber + 1;\r\n            }else{\r\n                this.moveNumber = this.previousPosition.moveNumber\r\n            }\r\n        }else{\r\n            this.moveNumber = 0\r\n        }\r\n    }\r\n\r\n    sideToMove() {\r\n        if(!this.lastMove || this.lastMove.color === Constants.BLACK)\r\n            return Constants.WHITE\r\n        else\r\n            return Constants.BLACK\r\n    }\r\n\r\n    addNextPosition(nextPosition){\r\n        if(!this.nextPosition){\r\n            this.nextPosition = nextPosition;\r\n            return\r\n        }\r\n        if(this.nextPosition.fen === nextPosition.fen){\r\n            return\r\n        }\r\n        if(!this.sublines.find(pos => pos.fen === nextPosition.fen)){\r\n            this.sublines.push(nextPosition)\r\n        }\r\n    }\r\n}\r\n","import Position from './Position'\r\n\r\nconst STARTING_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\r\nexport default class{\r\n    constructor(){\r\n        this.positions = [];\r\n        this.startingPosition = new Position(STARTING_FEN);\r\n        this.whiteName = \"white\"\r\n        this.blackName = \"black\"\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {render, unmountComponentAtNode} from \"react-dom\"\r\n\r\nexport class ModalWindow extends Component {\r\n  close = () => {\r\n    removeElement();\r\n  }\r\n}\r\n\r\nconst elementId = \"modal-window\";\r\n\r\nfunction removeElement() {\r\n  const target = document.getElementById(elementId);\r\n  if (target) {\r\n    unmountComponentAtNode(target);\r\n    target.parentNode.removeChild(target);\r\n  }\r\n}\r\n\r\n\r\nfunction createElement(element) {\r\n  let targetDiv = document.getElementById(elementId);\r\n  if (!targetDiv) {\r\n    targetDiv = document.createElement(\"div\");\r\n    targetDiv.id = elementId;\r\n    document.body.appendChild(targetDiv)\r\n  }\r\n  render(element, targetDiv);\r\n}\r\n\r\nexport function showModal(element) {\r\n  createElement(element);\r\n}\r\n"],"sourceRoot":""}