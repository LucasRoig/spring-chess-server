{"version":3,"sources":["database/DbDetails.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","database/DatabaseService.js","database/DatabaseDetails.js","models/Constants.js","models/Position.js","models/Game.js"],"names":["__webpack_require__","d","__webpack_exports__","GameHeader","DbDetails","tcomb__WEBPACK_IMPORTED_MODULE_0__","tcomb__WEBPACK_IMPORTED_MODULE_0___default","n","t","struct","whiteName","String","blackName","id","Number","name","gameHeaders","list","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","PostDatabaseRequest","listDatabases","ApiService","get","then","res","status","data","console","log","catch","e","error","postDatabase","_ref","request","post","getDetails","createGame","databaseId","game","Game","deleteDatabase","delete","importPgn","file","formData","FormData","append","apply","GameDetails","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","onClick","className","stopPropagation","history","push","DatabaseDetails","_this","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","DatabaseService","state","database","db","setState","update","$push","onFileChanged","selectedPgn","target","files","uploadPgn","g","_this2","match","params","_this3","Fragment","type","onChange","map","key","Component","WHITE","BLACK","Position","fen","lastMove","previousPosition","nextPosition","comment","sublines","color","moveNumber","Constants","find","pos","_default","positions","startingPosition"],"mappings":"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","file":"static/js/7.b3282873.chunk.js","sourcesContent":["import t from \"tcomb\";\r\n\r\nexport const GameHeader = t.struct({\r\n  whiteName: t.String,\r\n  blackName: t.String,\r\n  id: t.Number\r\n})\r\nexport const DbDetails = t.struct({\r\n  name: t.String,\r\n  id: t.Number,\r\n  gameHeaders: t.list(GameHeader)\r\n})\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import ApiService from \"../services/ApiService\";\r\nimport t from \"tcomb\";\r\nimport Game from \"../models/Game\";\r\nimport {DbDetails, GameHeader} from \"./DbDetails\";\r\n\r\nconst listDatabases = () => {\r\n  return ApiService.get(\"/database\").then(res => {\r\n    if (res.status === 200) {\r\n      return res.data;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).then(data => {\r\n    console.log(data)\r\n    return data\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst PostDatabaseRequest = t.struct({\r\n  name: t.String,\r\n}, \"PostDatabaseRequest\")\r\n\r\nconst postDatabase = ({name}) => {\r\n  let request = PostDatabaseRequest({name});\r\n  return ApiService.post(\"/database\", request).then(res => {\r\n    if (res.status === 200 || res.status === 201) {\r\n      console.log(res.data)\r\n      return res.data\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst getDetails = (id) => {\r\n  return ApiService.get(\"/database/\" + id).then(res => {\r\n    if (res.status === 200) {\r\n      let d = DbDetails(res.data)\r\n      console.log(d)\r\n      return d;\r\n    } else {\r\n      throw res\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst createGame = (databaseId) => {\r\n  let game = new Game();\r\n  return ApiService.post(\"/database/\" + databaseId + \"/game\", game).then(res => {\r\n    if (res.status === 200 || res.status === 201) {\r\n      let gameHeader = GameHeader({\r\n        whiteName: res.data.whiteName,\r\n        blackName: res.data.blackName,\r\n        id: res.data.id\r\n      })\r\n      return gameHeader;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst deleteDatabase = (databaseId) => {\r\n  return ApiService.delete(\"/database/\" + databaseId).then(res => {\r\n    if (res.status === 200) {\r\n      return true;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  });\r\n}\r\n\r\nconst importPgn = (databaseId, file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"pgnFile\", file, file.name);\r\n  return ApiService.post(\"/database/\" + databaseId + \"/uploadPgn\", formData).then(res => {\r\n    if (res.status !== 200 && res.status !== 201) {\r\n      throw res;\r\n    } else {\r\n      return GameHeader(...res.data);\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  listDatabases,\r\n  postDatabase,\r\n  getDetails,\r\n  createGame,\r\n  deleteDatabase,\r\n  importPgn\r\n}\r\n","import React, {Component} from 'react';\r\nimport './DatabaseList.scss';\r\nimport DatabaseService from \"./DatabaseService\";\r\nimport {DbDetails} from \"./DbDetails\";\r\n\r\nconst GameDetails = (props) => {\r\n  function handleTraining(e) {\r\n    e.stopPropagation();\r\n    props.history.push(\"/training/\" + props.game.id);\r\n  }\r\n  function handleDelete(e) {\r\n    e.stopPropagation();\r\n  }\r\n  return (\r\n    <tr onClick={props.onClick}>\r\n      <td>{props.game.whiteName}</td>\r\n      <td>{props.game.blackName}</td>\r\n      <td></td>\r\n      <td>\r\n        <button className=\"button\" onClick={handleTraining}>Training</button>\r\n        <button className=\"button is-danger\" onClick={handleDelete}>Supprimer</button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nclass DatabaseDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      database: null,\r\n      selectedPgn: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    DatabaseService.getDetails(this.props.match.params.id).then(database => {\r\n      console.log(database)\r\n      this.setState({database})\r\n    })\r\n  }\r\n\r\n  createGame = () => {\r\n    DatabaseService.createGame(this.state.database.id).then(game => {\r\n      let db = this.state.database;\r\n      this.setState({\r\n        database: DbDetails.update(db, {gameHeaders: {$push: [game]}})\r\n      })\r\n    });\r\n  }\r\n\r\n  onFileChanged = (e) => {\r\n    this.setState({selectedPgn: e.target.files[0]})\r\n  }\r\n\r\n  uploadPgn = () => {\r\n    const selectedPgn = this.state.selectedPgn;\r\n    if (selectedPgn) {\r\n      DatabaseService.importPgn(this.state.database.id, selectedPgn).then(g => {\r\n        let db = this.state.database;\r\n        this.setState({\r\n          database: DbDetails.update(db, {gameHeaders: {$push: [g]}})\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.database ?\r\n          <>\r\n            <h1 className=\"title is-1\">{this.state.database.name}</h1>\r\n            <div>\r\n              <button className=\"button\" onClick={this.createGame}>Add new Game</button>\r\n            </div>\r\n            <div>\r\n              <input type=\"file\" onChange={this.onFileChanged}/>\r\n              <button className=\"button\" onClick={this.uploadPgn}>Importer</button>\r\n            </div>\r\n            <table className=\"databases table is-striped is-hoverable is-fullwidth\">\r\n              <thead>\r\n              <tr>\r\n                <th>White</th>\r\n                <th>Black</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {this.state.database.gameHeaders.map(game =>\r\n                <GameDetails key={game.id} game={game}\r\n                             onClick={() => this.props.history.push(\"/game/\" + game.id)} history={this.props.history}/>)\r\n              }\r\n              </tbody>\r\n            </table>\r\n          </>\r\n          : <div>Loading</div>}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DatabaseDetails;\r\n","export let WHITE = \"w\";\r\nexport let BLACK = \"b\";","import * as Constants from './Constants';\r\nexport default class Position{\r\n    constructor(fen, lastMove, previousPosition){\r\n        this.fen = fen;\r\n        this.lastMove = lastMove;\r\n        this.previousPosition = previousPosition;\r\n        this.nextPosition = null;\r\n        this.comment = \"\";\r\n        this.sublines = [];\r\n\r\n        if(this.previousPosition){\r\n            if(this.lastMove.color === 'w'){\r\n                this.moveNumber = this.previousPosition.moveNumber + 1;\r\n            }else{\r\n                this.moveNumber = this.previousPosition.moveNumber\r\n            }\r\n        }else{\r\n            this.moveNumber = 0\r\n        }\r\n    }\r\n\r\n    sideToMove() {\r\n        if(!this.lastMove || this.lastMove.color === Constants.BLACK)\r\n            return Constants.WHITE\r\n        else\r\n            return Constants.BLACK\r\n    }\r\n\r\n    addNextPosition(nextPosition){\r\n        if(!this.nextPosition){\r\n            this.nextPosition = nextPosition;\r\n            return\r\n        }\r\n        if(this.nextPosition.fen === nextPosition.fen){\r\n            return\r\n        }\r\n        if(!this.sublines.find(pos => pos.fen === nextPosition.fen)){\r\n            this.sublines.push(nextPosition)\r\n        }\r\n    }\r\n}\r\n","import Position from './Position'\r\n\r\nconst STARTING_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\r\nexport default class{\r\n    constructor(){\r\n        this.positions = [];\r\n        this.startingPosition = new Position(STARTING_FEN);\r\n        this.whiteName = \"white\"\r\n        this.blackName = \"black\"\r\n    }\r\n}"],"sourceRoot":""}