{"version":3,"sources":["GameView/GameService.js","GameView/ChessBoard/ChessgroundWrapper.js","GameView/NotationView/NotationModel.js","GameView/NotationView/Tools/BookTool.js","engine/StockfishManager.js","utils/MoveUtils.js","GameView/NotationView/Tools/EngineTool.js","GameView/NotationView/ScrollManager.js","GameView/NotationView/Tools/StatsTool.js","GameView/NotationView/Toolbar.js","GameView/NotationView/NotationView.js","models/Constants.js","models/Position.js","models/Game.js"],"names":["GameToDto","_this","this","Object","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","gameToDto","game","dto","blackName","whiteName","positions","id","visitPosition","startingPosition","position","gameDto","positionIndex","counter","commentAfter","comment","fen","lastMoveSan","lastMove","san","nextPosition","nextDto","sublines","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","variation","value","variationDto","push","err","return","length","join","DtoToGame","Game","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","p","parsePosition","positionsArray","index","previousPosition","move","parseMove","Position","nextPos","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","split","i","parseInt","positionDto","color","__webpack_exports__","fetchGame","ApiService","get","then","res","status","dtoToGame","data","console","log","catch","e","error","saveGame","post","deleteGame","delete","ChessgroundWrapper","turnColor","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","react_chessground__WEBPACK_IMPORTED_MODULE_6___default","width","style","height","paddingBottom","orientation","movable","free","dests","legalMoves","movableColor","premovable","enabled","onMove","viewOnly","React","Component","defaultProps","MainLineMoveMenu","connectMenu","trigger","handleItemClick","onItemClick","title","moveNumber","sideToMove","Constants","react_default","es6","attributes","onClick","action","SubLineMoveMenu","contextMenuItemAttributes","target","NotationMove","onMoveClicked","currentPosition","onContextualAction","classCallCheck","handleClick","classes","collect","NotationIndex","NotationEmptyMove","NotationInlineComment","NotationInterrupt","map","subline","NotationSubline","line","render","_this2","moves","NotationSublineMove","forEach","_this3","NotationModel","notation","isWhite","createClass","key","n","BookTool","state","handleClickOnMove","from","uci","substring","to","makeMove","promotion","_fetchData","fetch","cache","r","json","setState","fetchData","AwesomeDebouncePromise","m","white","black","draws","BookTool_ScoreBar","prevProps","prevState","snapshot","ScoreBar","total","whitePercentage","blackPercentage","drawPercentage","styleWhite","styleBlack","styleDraw","EngineState","engineName","numberOfLines","name","lines","depth","selDepth","moveList","extractMovesFromLine","currentWork","lineNumber","score","EngineLine","keywords","nextWork","callOnInfo","engine","Worker","currentState","running","onReady","send","message","postMessage","onmessage","startsWith","handleResponse","formatedData","formatInfo","update","movesUci","trim","chess","Chess","currentKeyword","currentData","d","includes","StockfishManager","analysePosition","onInfo","MoveUtils","initialPosition","result","moveCount","EngineLines","EngineTool_EngineLine","EngineTool","engineState","onEngineInfo","startAnalyse","EngineTool_EngineLines","ScrollManager","scrollToActiveMove","document","getElementsByClassName","scrollIntoView","StatsTool","possibleConstructorReturn","getPrototypeOf","call","nbOfPositions","nbOfpos","reduce","b","nbOfLines","TOOL_NONE","TOOL_BOOK","TOOL_ENGINE","TOOL_STATS","Toolbar","selectedTool","BookTool_BookTool","EngineTool_EngineTool","StatsTool_StatsTool","hrefLang","selectTool","tool","NotationView","notationModel","Toolbar_Toolbar","__webpack_require__","WHITE","BLACK","C_Users_Lucas_Documents_dev_chess_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","find","pos","_default"],"mappings":"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","file":"static/js/2.0b36e734.chunk.js","sourcesContent":["import ApiService from \"../services/ApiService\";\r\nimport Game from \"../models/Game\";\r\nimport Position from \"../models/Position\";\r\n\r\nclass GameToDto {\r\n  constructor() {\r\n    this.counter = 0;\r\n  }\r\n\r\n  gameToDto = (game) => {\r\n    const dto = {};\r\n    dto.blackName = game.blackName;\r\n    dto.whiteName = game.whiteName;\r\n    dto.positions = [];\r\n    if (game.id && game.id >= 0) {\r\n      dto.id = game.id;\r\n    }\r\n    this.visitPosition(game.startingPosition, dto);\r\n    return dto;\r\n  }\r\n\r\n  visitPosition = (position, gameDto) => {\r\n    const dto = {};\r\n    dto.positionIndex = this.counter;\r\n    this.counter++;\r\n    dto.commentAfter = position.comment;\r\n    dto.fen = position.fen;\r\n    dto.lastMoveSan = position.lastMove ? position.lastMove.san : \"\";\r\n    if (position.nextPosition) {\r\n      let nextDto = this.visitPosition(position.nextPosition, gameDto);\r\n      dto.nextPosition = nextDto.positionIndex;\r\n    }\r\n    let sublines = [];\r\n    for (let variation of position.sublines) {\r\n      let variationDto = this.visitPosition(variation, gameDto);\r\n      sublines.push(variationDto.positionIndex);\r\n    }\r\n    if (sublines.length === 0) {\r\n      dto.sublines = \"\";\r\n    } else {\r\n      dto.sublines = sublines.join(\";\");\r\n    }\r\n    gameDto.positions.push(dto);\r\n    return dto;\r\n  }\r\n}\r\n\r\nclass DtoToGame {\r\n  dtoToGame(dto) {\r\n    let game = new Game();\r\n    game.whiteName = dto.whiteName;\r\n    game.blackName = dto.blackName;\r\n    game.id = dto.id;\r\n    if (dto.positions.length > 0) {\r\n      let positions = [];\r\n      for (let p of dto.positions) {\r\n        positions[p.positionIndex] = p;\r\n      }\r\n      game.startingPosition = this.parsePosition(positions, 0);\r\n    }\r\n    return game;\r\n  }\r\n\r\n  parsePosition(positionsArray, index, previousPosition) {\r\n    let dto = positionsArray[index];\r\n    let move = index > 0 ? this.parseMove(dto) : undefined;\r\n    let position = new Position(dto.fen, move, previousPosition);\r\n    position.comment = dto.commentAfter;\r\n    if (dto.nextPosition > 0) {\r\n      let nextPos = this.parsePosition(positionsArray, dto.nextPosition, position);\r\n      position.nextPosition = nextPos;\r\n    }\r\n    if (dto.sublines.length > 0) {\r\n      for (let i of dto.sublines.split(\";\")) {\r\n        let nextPos = this.parsePosition(positionsArray, parseInt(i), position);\r\n        position.sublines.push(nextPos);\r\n      }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  parseMove(positionDto) {\r\n    let san = positionDto.lastMoveSan;\r\n    const nextColor = positionDto.fen.split(' ')[1];\r\n    let color = nextColor === \"b\" ? \"w\" : \"b\";\r\n    return {san, color}\r\n  }\r\n}\r\n\r\nconst fetchGame = (id) => {\r\n  return ApiService.get(\"/game/\" + id).then(res => {\r\n    if (res.status === 200) {\r\n      const game = new DtoToGame().dtoToGame(res.data);\r\n      console.log(game)\r\n      return game;\r\n    } else {\r\n      throw res\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst saveGame = (game) => {\r\n  let dto = new GameToDto().gameToDto(game);\r\n  console.log(dto)\r\n  return ApiService.post(\"/game/\" + game.id, dto).then(res => {\r\n    if (res.status !== 200) {\r\n      throw res;\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nconst deleteGame = game => {\r\n  return ApiService.delete(\"/game/\" + game.id).then(res => {\r\n    if (res.status !== 200) {\r\n      throw res;\r\n    }\r\n    return true;\r\n  }).catch(e => {\r\n    console.error(e);\r\n    //TODO\r\n  })\r\n}\r\n\r\nexport default {\r\n  fetchGame,\r\n  saveGame,\r\n  deleteGame\r\n}\r\n","import React from \"react\"\r\nimport Chessground from \"react-chessground\"\r\nimport \"react-chessground/dist/styles/chessground.css\"\r\nimport \"./Chessground.scss\"\r\nclass ChessgroundWrapper extends React.Component {\r\n    static defaultProps = {\r\n        movableColor: \"both\",\r\n        orientation: \"white\",\r\n        lastMove: [],\r\n        viewOnly: false\r\n    }\r\n    turnColor = () => {\r\n        if (this.props.position) {\r\n            const split = this.props.position.split(\" \");\r\n            if (split.length > 1 && split[1] === \"b\") {\r\n                return \"black\"\r\n            }\r\n        }\r\n        return \"white\"\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.props.className}>\r\n            {/*Setting height to 0 and padding to 100% allows us to keep a 1:1 ratio*/}\r\n            <Chessground width=\"100%\" style={{height: 0, paddingBottom:\"100%\"}} className={this.props.className}\r\n                         fen={this.props.position}\r\n                         orientation={this.props.orientation}\r\n                         movable={{free: false, dests: this.props.legalMoves, color: this.props.movableColor}}\r\n                         premovable={{enabled: false}}\r\n                         lastMove={this.props.lastMove}\r\n                         onMove={this.props.onMove}\r\n                         turnColor={this.turnColor()}\r\n                         viewOnly={this.props.viewOnly}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChessgroundWrapper;","import * as Constants from \"../../models/Constants\"\r\nimport React from 'react'\r\nimport './Notation.scss'\r\nimport { ContextMenuTrigger, ContextMenu, MenuItem, connectMenu } from \"react-contextmenu\";\r\n\r\nconst MAIN_LINE_MOVE_CONTEXT_MENU_ID = \"mainLineMoveContextMenu\";\r\nconst SUB_LINE_MOVE_CONTEXT_MENU_ID = \"subLineMoveContextMenu\";\r\n\r\nconst DynamicMainLineMoveMenu = (props) => {\r\n    const {id, trigger} = props;\r\n    const handleItemClick = trigger ? trigger.onItemClick : null;\r\n    console.log(trigger);\r\n    let contextMenuItemAttributes = {\r\n        className: \"item\"\r\n    };\r\n    let title = \"\";\r\n    if(trigger){\r\n        title = trigger.position.moveNumber + (trigger.position.sideToMove() === Constants.BLACK ? '.' : '...')+ trigger.san;\r\n    }\r\n    return(\r\n        <ContextMenu id={id} className=\"context-menu\">\r\n            {trigger && <p className=\"title\">{title}</p>}\r\n            {trigger &&\r\n            <MenuItem attributes={contextMenuItemAttributes} onClick={handleItemClick} data={{action:\"DELETE_NEXT_POSITIONS\"}}>\r\n                Supprimer la suite\r\n            </MenuItem>\r\n            }\r\n        </ContextMenu>\r\n    )\r\n};\r\n\r\n\r\nconst DynamicSublineMoveMenu = (props) => {\r\n    const {id, trigger} = props;\r\n    let contextMenuItemAttributes = {\r\n        className: \"item\"\r\n    };\r\n    const handleItemClick = (e, data, target) => {\r\n        console.log(\"debug\")\r\n        // trigger ? trigger.onItemClick() : null;\r\n        trigger.onItemClick(e, data, target);\r\n    };\r\n    let title = \"\";\r\n    if(trigger){\r\n        title = trigger.position.moveNumber + (trigger.position.sideToMove() === Constants.BLACK ? '.' : '...')+ trigger.san;\r\n    }\r\n    return(\r\n        <ContextMenu id={id} className=\"context-menu\">\r\n            {trigger && <p className=\"title\">{title}</p>}\r\n            {trigger &&\r\n            <MenuItem attributes={contextMenuItemAttributes} onClick={handleItemClick} data={{action:\"DELETE_NEXT_POSITIONS\"}}>\r\n                Supprimer la suite\r\n            </MenuItem>\r\n            }\r\n            {trigger &&\r\n            <MenuItem attributes={contextMenuItemAttributes} onClick={handleItemClick} data={{action:\"PROMOTE_SUBLINE\"}}>\r\n                Promouvoir la variante\r\n            </MenuItem>\r\n            }\r\n            {trigger &&\r\n            <MenuItem attributes={contextMenuItemAttributes} onClick={handleItemClick} data={{action:\"DELETE_SUBLINE\"}}>\r\n                Supprimer la variante\r\n            </MenuItem>\r\n            }\r\n        </ContextMenu>\r\n    )\r\n};\r\n\r\nconst MainLineMoveMenu = connectMenu(MAIN_LINE_MOVE_CONTEXT_MENU_ID)(DynamicMainLineMoveMenu);\r\nconst SubLineMoveMenu = connectMenu(SUB_LINE_MOVE_CONTEXT_MENU_ID)(DynamicSublineMoveMenu);\r\n\r\nclass NotationMove {\r\n    constructor(san, position, onMoveClicked, currentPosition,onContextualAction) {\r\n        this.san = san;\r\n        this.position = position;\r\n        this.handleClick = onMoveClicked;\r\n        this.classes = \"move \";\r\n        this.onContextualAction = onContextualAction;\r\n        if(currentPosition === position) this.classes += \" active\";\r\n        this.attributes = {\r\n            className : this.classes,\r\n            onClick:() => this.handleClick(this.position)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let collect = (props) => {\r\n            return props;\r\n        };\r\n        return (\r\n            <ContextMenuTrigger id={MAIN_LINE_MOVE_CONTEXT_MENU_ID}\r\n                                attributes={this.attributes}\r\n                                position={this.position}\r\n                                san={this.san}\r\n                                collect={collect}\r\n                                onItemClick={this.onContextualAction}\r\n                                >\r\n               {this.san}\r\n            </ContextMenuTrigger>\r\n        )\r\n    }\r\n}\r\n\r\nclass NotationIndex {\r\n    constructor(moveNumber) {\r\n        this.moveNumber = moveNumber\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"move-number\">{this.moveNumber}</div>)\r\n    }\r\n}\r\n\r\nclass NotationEmptyMove {\r\n    render() {\r\n        return <div className=\"empty-move\">...</div>\r\n    }\r\n}\r\n\r\nclass NotationInlineComment {\r\n    constructor(comment){\r\n        this.comment = comment;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"comment\">{this.comment}</div>\r\n    }\r\n}\r\n\r\nclass NotationInterrupt {\r\n    constructor(comment, sublines, onMoveClicked, currentPosition, onContextualAction) {\r\n        this.comment = comment;\r\n        this.sublines = sublines.map(subline => new NotationSubline(subline, onMoveClicked, currentPosition, onContextualAction));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"interrupt\">\r\n                { this.comment && this.comment !== \"\" &&\r\n                    <div className=\"comment\">\r\n                        {this.comment}\r\n                    </div>\r\n                }\r\n                { this.sublines.length > 0 &&\r\n                    <div className=\"sublines\">\r\n                        {this.sublines.map(line => line.render())}\r\n                    </div>\r\n                }\r\n            </div>)\r\n    }\r\n}\r\n\r\nclass NotationSubline {\r\n    constructor(position, onMoveClicked, currentPosition, onContextualAction) {\r\n        this.moves = [];\r\n        this.sublines = [];\r\n        while (position !== null) {\r\n            let isWhite = position.lastMove.color === Constants.WHITE;\r\n            if (isWhite) {\r\n                this.moves.push(new NotationSublineMove(position.lastMove.san, position.moveNumber + '.', position, onMoveClicked, currentPosition, onContextualAction));\r\n            } else if (this.moves.length === 0) {\r\n                this.moves.push(new NotationSublineMove(position.lastMove.san, position.moveNumber + '...', position, onMoveClicked, currentPosition, onContextualAction));\r\n            } else {\r\n                this.moves.push(new NotationSublineMove(position.lastMove.san,null, position, onMoveClicked, currentPosition,onContextualAction));\r\n            }\r\n            if(position.comment && position.comment !== \"\"){\r\n                this.moves.push(new NotationInlineComment(position.comment));\r\n            }\r\n            if (position.sublines.length > 0){\r\n                this.sublines.push(new NotationSubline(position.nextPosition, onMoveClicked, currentPosition, onContextualAction));\r\n                position.sublines.forEach(subline => this.sublines.push(new NotationSubline(subline, onMoveClicked, currentPosition, onContextualAction)));\r\n                break;\r\n            }\r\n            position = position.nextPosition;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"subline\">\r\n                {this.moves.map(move => move.render())}\r\n                {this.sublines.length > 0 &&\r\n                    <div className=\"sublines\">\r\n                        {this.sublines.map(subline => subline.render())}\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass NotationSublineMove {\r\n    constructor(san, moveNumber, position, onMoveClicked, currentPosition, onContextualAction) {\r\n        this.san = san;\r\n        this.moveNumber = moveNumber;\r\n        this.position = position;\r\n        this.handleClick = onMoveClicked;\r\n        this.classes = \"subline-move \";\r\n        this.onContextualAction = onContextualAction;\r\n        if(currentPosition === position) this.classes += \" active\";\r\n\r\n        this.attributes = {\r\n            className: this.classes,\r\n            onClick: () => this.handleClick(this.position)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let collect = (props) => {\r\n            return props;\r\n        };\r\n        return (\r\n            <ContextMenuTrigger id={SUB_LINE_MOVE_CONTEXT_MENU_ID}\r\n                                attributes={this.attributes}\r\n                                position={this.position}\r\n                                san={this.san}\r\n                                collect={collect}\r\n                                onItemClick={this.onContextualAction}>\r\n                {this.moveNumber &&\r\n                <div className=\"move-number\">{this.moveNumber}</div>\r\n                }\r\n                {this.san}\r\n            </ContextMenuTrigger>)\r\n    }\r\n}\r\n\r\nexport class NotationModel {\r\n\r\n    constructor(game, onMoveClicked, currentPosition, onContextualAction) {\r\n        this.notation = [];\r\n        let position = game.startingPosition.nextPosition;\r\n        while (position !== null) {\r\n            let isWhite = position.lastMove.color === Constants.WHITE;\r\n            if (isWhite) {\r\n                this.notation.push(new NotationIndex(position.moveNumber))\r\n            }\r\n            this.notation.push(new NotationMove(position.lastMove.san, position, onMoveClicked, currentPosition, onContextualAction));\r\n            if ((position.comment && position.comment !== \"\") || position.previousPosition.sublines.length > 0) {\r\n                if (isWhite) {\r\n                    this.notation.push(new NotationEmptyMove())\r\n                }\r\n                this.notation.push(new NotationInterrupt(position.comment, position.previousPosition.sublines, onMoveClicked, currentPosition, onContextualAction));\r\n                if (isWhite) {\r\n                    this.notation.push(new NotationIndex(position.moveNumber));\r\n                    this.notation.push(new NotationEmptyMove());\r\n                }\r\n            }\r\n            position = position.nextPosition\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"notation\">\r\n                {this.notation.map(n => n.render())}\r\n                <MainLineMoveMenu/>\r\n                <SubLineMoveMenu/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport \"../Toolbar.scss\"\r\nimport AwesomeDebouncePromise  from \"awesome-debounce-promise\";\r\n\r\n\r\nexport default class BookTool extends Component {\r\n    state = {\r\n        moves: []\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"tool-book\">\r\n                {this.state.moves.length === 0 &&\r\n                <div>\r\n                    <div className=\"title\">Explorateur d'ouvertures et tables de finales</div>\r\n                    <div>Aucune partie trouvée</div>\r\n                </div>\r\n                }\r\n                {this.state.moves.length > 0 &&\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Coup</th>\r\n                        <th>Parties</th>\r\n                        <th>Blancs / Nulle / Noirs</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.moves.map(m => (\r\n                        <tr key={m.san} onClick={() => this.handleClickOnMove(m)}>\r\n                            <td>{m.san}</td>\r\n                            <td>{m.white + m.black + m.draws}</td>\r\n                            <td><ScoreBar white={m.white} black={m.black} draws={m.draws}/></td>\r\n                        </tr>\r\n\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickOnMove = (move) => {\r\n        let from = move.uci.substring(0,2);\r\n        let to = move.uci.substring(2,4);\r\n        if(move.uci.length === 5){\r\n            let promotion = move.uci.substring(4);\r\n            this.props.makeMove(from,to,promotion);\r\n            return;\r\n        }\r\n        //Handle Castle\r\n        if(from === \"e1\" && move.san === \"O-O\"){\r\n            this.props.makeMove(\"e1\",\"g1\");\r\n        }else if(from === \"e8\" && move.san === \"O-O\"){\r\n            this.props.makeMove(\"e8\",\"g8\")\r\n        }else if(from === \"e1\" && move.san === \"O-O-O\"){\r\n            this.props.makeMove(\"e1\",\"c1\");\r\n        }else if(from === \"e8\" && move.san === \"O-O-O\"){\r\n            this.props.makeMove(\"e8\",\"c8\")\r\n        }else {\r\n            this.props.makeMove(from,to);\r\n        }\r\n    };\r\n\r\n    //TODO fix memory leak, when book tool is unmounted the debounced function is still running\r\n    _fetchData= () => {\r\n        console.log(\"fetch data from lichess\")\r\n        fetch('https://explorer.lichess.ovh/master?fen=' + this.props.currentPosition.fen,{cache: \"force-cache\"})\r\n            .then(r => r.json())\r\n            .then(data => this.setState({ moves: data.moves }));\r\n    };\r\n\r\n    fetchData = AwesomeDebouncePromise(this._fetchData,500);\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.currentPosition.fen !== this.props.currentPosition.fen){\r\n            this.fetchData();\r\n        }\r\n    }\r\n}\r\n\r\nconst ScoreBar = (props) => {\r\n    let white = props.white;\r\n    let black = props.black;\r\n    let draws = props.draws;\r\n    let total = white + black + draws;\r\n    if (total === 0) {\r\n        return <div/>\r\n    }\r\n\r\n    let whitePercentage = parseInt((white / total) * 100);\r\n    let blackPercentage = parseInt((black / total) * 100);\r\n    let drawPercentage = parseInt((draws / total) * 100);\r\n\r\n    let styleWhite = {\r\n        width: whitePercentage + \"%\"\r\n    };\r\n    let styleBlack = {\r\n        width: blackPercentage + \"%\"\r\n    };\r\n    let styleDraw = {\r\n        width: drawPercentage + \"%\"\r\n    };\r\n    return (\r\n        <div className=\"bar\">\r\n            {white !== 0 &&\r\n            <span className=\"white\" style={styleWhite}>{whitePercentage}%</span>\r\n            }\r\n            {draws !== 0 &&\r\n            <span className=\"draws\" style={styleDraw}>{drawPercentage}%</span>\r\n            }\r\n            {black !== 0 &&\r\n            <span className=\"black\" style={styleBlack}>{blackPercentage}%</span>\r\n            }\r\n        </div>\r\n    )\r\n};","import  Chess  from \"chess.js\";\r\n\r\n\r\n//TODO : réécrire tout ça, on peut s'inspirer de ce qu'a fait lichess ou partir sur un gros automate.\r\nclass EngineState{\r\n    constructor(engineName, numberOfLines){\r\n        this.name = engineName;\r\n        this.lines = [];\r\n        for (let i = 0; i<numberOfLines; i++){\r\n            this.lines.push({});\r\n        }\r\n        this.depth = 0;\r\n        this.selDepth = 0;\r\n    }\r\n\r\n    update(data){\r\n        let moveList = extractMovesFromLine(data['pv'],currentWork);\r\n        this.depth = data['depth'];\r\n        this.selDepth = data['seldepth'];\r\n        let lineNumber = data['multipv'] - 1;\r\n        let score = data['score'].split(' ')[1] / 100;\r\n        this.lines[lineNumber] = new EngineLine(score,moveList);\r\n    }\r\n}\r\n\r\nclass EngineLine{\r\n    constructor(score,line){\r\n        this.score = score;\r\n        this.line = line;\r\n    }\r\n}\r\n\r\nconst keywords = ['depth','seldepth','time','nodes','pv','multipv','score','currmove','currmovenumber', 'hashfull',\r\n                    'nps', 'tbhits', 'cpuload', 'string', 'refutation', 'currline', 'bmc'];\r\nconst ENGINE_NAME = \"Stockfish 10\";\r\n\r\nlet nextWork = '';\r\nlet currentWork = '';\r\nlet callOnInfo = () => {};\r\nlet engine = new Worker(\"/stockfish.js\");\r\nlet currentState = {};\r\nlet running = false;\r\nlet onReady = () => {};\r\n// let multipv = 1;\r\n\r\nlet send = (message) => {\r\n    console.log(\"Send to engine : \" + message);\r\n    engine.postMessage(message);\r\n};\r\n\r\nengine.onmessage = function (message) {\r\n    if(!message.data.startsWith('info'))\r\n        console.log(\"received : \", message.data);\r\n    handleResponse(message.data);\r\n};\r\n\r\n\r\nlet setMultiPv = (value) => {\r\n    send('setoption name multipv value ' + value);\r\n    // multipv = value;\r\n    currentState = new EngineState(ENGINE_NAME,value);\r\n};\r\n\r\nsetMultiPv(3);\r\n\r\nlet handleResponse = (data) =>{\r\n    if(data === 'readyok'){\r\n        send('position fen ' + nextWork);\r\n        currentWork = nextWork;\r\n        send('go depth 20');\r\n    }else if(data.startsWith('info')){\r\n        running = true;\r\n        let formatedData = formatInfo(data);\r\n        currentState.update(formatedData);\r\n        callOnInfo(currentState);\r\n    }else if(data.startsWith('bestmove')){\r\n        running = false;\r\n        onReady();\r\n        onReady = () => {};\r\n    }\r\n};\r\n\r\nlet extractMovesFromLine = (line, fen) => {\r\n    let movesUci = line.trim().split(' ');\r\n    // console.log(movesUci);\r\n    let chess = new Chess(fen);\r\n    let moveList = movesUci.map(uci => {\r\n        let from = uci.substring(0,2);\r\n        let to = uci.substring(2,4);\r\n        let promotion = 'q';\r\n        if(uci.length === 5){\r\n            promotion = uci.substring(4)\r\n        }\r\n        let move = chess.move({\r\n            from,\r\n            to,\r\n            promotion\r\n        })\r\n        if(move === null){\r\n            console.error(\"Unable to calculate move for uci\", uci);\r\n            return []\r\n        }\r\n        return move;\r\n    })\r\n    return moveList;\r\n} \r\n\r\nlet formatInfo = (data) => {\r\n  let formatedData = {};\r\n  let currentKeyword = '';\r\n  let currentData = '';\r\n  data.split(' ').forEach(d => {\r\n      if(d === 'info') return;\r\n      if(keywords.includes(d)){\r\n          if(currentKeyword.length > 0){\r\n              formatedData[currentKeyword] = currentData;\r\n          }\r\n          currentKeyword = d;\r\n          currentData = \"\";\r\n      }else{\r\n        currentData += d + \" \";\r\n      }\r\n  });\r\n  formatedData[currentKeyword] = currentData;\r\n  return formatedData;\r\n};\r\n\r\nlet StockfishManager = {\r\n    analysePosition: (fen, onInfo) => {\r\n        nextWork = fen;\r\n        callOnInfo = onInfo;\r\n        if(!running){\r\n            send('ucinewgame');\r\n            send('isready');\r\n        }else{\r\n            onReady = () => {\r\n                send('ucinewgame');\r\n                send('isready');\r\n            };\r\n            send('stop')\r\n        }\r\n    }\r\n};\r\n\r\nexport default StockfishManager;","import * as Constants from '../models/Constants'\r\nexport default {\r\n    moveListToString : (moveList, initialPosition) => {\r\n        let result = \"\";\r\n        let moveCount = initialPosition.sideToMove() === Constants.WHITE ? initialPosition.moveNumber + 1 : initialPosition.moveNumber;\r\n        moveList.forEach((move,index) => {\r\n            if(index === 0){\r\n                result += move.color === 'w' ? moveCount + \".\" : moveCount + \"...\"\r\n            }else if(move.color === 'w'){\r\n                result += moveCount + \".\"\r\n            }\r\n            result += move.san + \" \";\r\n            if(move.color === \"b\"){\r\n                moveCount++;\r\n            }\r\n        });\r\n        // console.log(result);\r\n        return result;\r\n    }\r\n};","import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport \"../Toolbar.scss\"\r\nimport \"./EngineTool.scss\"\r\nimport StockfishManager from \"../../../engine/StockfishManager\";\r\nimport MoveUtils from \"../../../utils/MoveUtils\";\r\nimport  * as Constants from '../../../models/Constants'\r\n\r\n//TODO: memory leek, continue de tourner meme si on ferme l'outil\r\nlet EngineLines = (props) => {\r\n    return (\r\n        <div>\r\n        {props.lines.map(line => {\r\n                if (line.score){\r\n                    return <EngineLine line={line.line} score={line.score} currentPosition={props.currentPosition}/>\r\n                }else{\r\n                    return ''\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nlet EngineLine = (props) => {\r\n    let score = props.score;\r\n    if(props.currentPosition.sideToMove() === Constants.BLACK)\r\n        score *= -1;\r\n    if(score > 0){\r\n        score = '+' + score;\r\n    }else{\r\n        score = '-' + (-1 * score);\r\n    }\r\n    return(\r\n\r\n        <div className=\"engine-line\">\r\n            <strong className=\"score\">{score}</strong>\r\n            <span className=\"line-text\">{MoveUtils.moveListToString(props.line,props.currentPosition)}</span>\r\n        </div>\r\n    )\r\n};\r\nexport default class EngineTool extends Component {\r\n    state = {\r\n        engineState: null,\r\n    };\r\n\r\n    render() {\r\n        let engineState = this.state.engineState;\r\n        if(engineState){\r\n            return (\r\n                <div className=\"tool-engine\">\r\n                    <div>\r\n                        <div className=\"title\">{engineState.name} depth {engineState.depth}/{engineState.selDepth}</div>\r\n                        <div>\r\n                        <EngineLines lines={engineState.lines} currentPosition={this.props.currentPosition}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"tool-engine\">\r\n                <div>\r\n                    <div className=\"title\">Stockfish</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onEngineInfo = (engineState) => {\r\n        // console.log(engineState);\r\n        this.setState({engineState})\r\n    };\r\n\r\n    startAnalyse = () => {\r\n        StockfishManager.analysePosition(this.props.currentPosition.fen, this.onEngineInfo);\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.currentPosition.fen !== this.props.currentPosition.fen){\r\n            this.setState({engineState: null});\r\n            this.startAnalyse();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startAnalyse();\r\n    }\r\n}","\r\nlet ScrollManager = {\r\n    scrollToActiveMove : () =>{\r\n        let e = document.getElementsByClassName(\"move active\");\r\n        if(e.length > 0){\r\n            e[0].scrollIntoView();\r\n            return;\r\n        }\r\n        e = document.getElementsByClassName(\"subline-move active\")\r\n        if(e.length > 0){\r\n            e[0].scrollIntoView();\r\n            return;\r\n        }\r\n    }\r\n};\r\nexport default ScrollManager;","import React, {Component} from \"react\";\r\n\r\nexport default class StatsTool extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    nbOfPositions = () => {\r\n        function nbOfpos(position) {\r\n            let n = 1;\r\n            if (position.nextPosition) {\r\n                n += nbOfpos(position.nextPosition)\r\n            }\r\n            n += position.sublines.map(line => nbOfpos(line)).reduce((a,b) => a +b, 0);\r\n            return n;\r\n        }\r\n        return nbOfpos(this.props.game.startingPosition);\r\n    }\r\n    nbOfLines = () => {\r\n        function nbOfLines(position) {\r\n            let n = 1;\r\n            if (position.nextPosition) {\r\n                n += nbOfLines(position.nextPosition) - 1;\r\n            }\r\n            n += position.sublines.map(line => nbOfLines(line)).reduce((a,b) => a +b, 0)\r\n            return n;\r\n        }\r\n        return nbOfLines(this.props.game.startingPosition);\r\n    }\r\n    render() {\r\n        return(\r\n        <div className=\"stats-tool\">\r\n            <div className=\"title\">STATS</div>\r\n            <p>Nombre de positions : {this.nbOfPositions()}</p>\r\n            <p>Nombre de lignes : {this.nbOfLines()}</p>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport \"./Toolbar.scss\"\r\nimport BookTool from \"./Tools/BookTool\";\r\nimport EngineTool from \"./Tools/EngineTool\"\r\nimport ScrollManager from \"./ScrollManager\";\r\nimport StatsTool from \"./Tools/StatsTool\";\r\n\r\nconst TOOL_NONE = {\r\n    name: \"None\"\r\n};\r\n\r\nconst TOOL_BOOK = {\r\n    name: \"Book\",\r\n};\r\nconst TOOL_ENGINE = {\r\n    name: \"Engine\"\r\n};\r\nconst TOOL_STATS = {\r\n    name: \"Stats\"\r\n}\r\n\r\n\r\nexport default class Toolbar extends Component {\r\n\r\n    state = {\r\n        selectedTool: TOOL_NONE\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <footer className=\"notation-footer\">\r\n                {this.state.selectedTool === TOOL_BOOK &&\r\n                <div className=\"tool\">\r\n                    <BookTool currentPosition={this.props.currentPosition} makeMove={this.props.makeMove}/>\r\n                </div>\r\n                }\r\n                {this.state.selectedTool === TOOL_ENGINE &&\r\n                <div className=\"tool\">\r\n                    <EngineTool currentPosition={this.props.currentPosition} makeMove={this.props.makeMove}/>\r\n                </div>\r\n                }\r\n                {this.state.selectedTool === TOOL_STATS &&\r\n                    <div className=\"tool\">\r\n                        <StatsTool game={this.props.game}/>\r\n                    </div>\r\n                }\r\n                <div className=\"tool-buttons\">\r\n                    <a className=\"card-footer-item\" hrefLang=\"#\" onClick={() => this.selectTool(TOOL_BOOK)}>Book</a>\r\n                    <a className=\"card-footer-item\" hrefLang=\"#\" onClick={() => this.selectTool(TOOL_ENGINE)}>Stockfish</a>\r\n                    <a className=\"card-footer-item\" hrefLang=\"#\" onClick={() => this.selectTool(TOOL_STATS)}>Stats</a>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n\r\n    selectTool(tool) {\r\n        if (this.state.selectedTool === tool) {\r\n            this.setState({selectedTool: TOOL_NONE});\r\n        } else {\r\n            this.setState({\r\n                selectedTool: tool,\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        ScrollManager.scrollToActiveMove();\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport { NotationModel } from \"./NotationModel\";\r\nimport Toolbar from  \"./Toolbar\"\r\nimport \"./Notation.scss\"\r\nimport ScrollManager from \"./ScrollManager\"\r\n\r\nexport default class NotationView extends Component {\r\n\r\n    render(){\r\n        let notationModel = new NotationModel(this.props.game, this.props.handleClick, this.props.currentPosition, this.props.onContextualAction);\r\n        return (\r\n            <div className=\"card game-details-panel\">\r\n                <header className=\"card-header game-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {this.props.game.whiteName} - {this.props.game.blackName}\r\n                    </p>\r\n                </header>\r\n                <div className=\"card-content notation-wrapper\">\r\n                    {notationModel.render()}\r\n                </div>\r\n                <Toolbar currentPosition={this.props.currentPosition} makeMove={this.props.makeMove} game={this.props.game}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        ScrollManager.scrollToActiveMove();\r\n    }\r\n}","export let WHITE = \"w\";\r\nexport let BLACK = \"b\";","import * as Constants from './Constants';\r\nexport default class Position{\r\n    constructor(fen, lastMove, previousPosition){\r\n        this.fen = fen;\r\n        this.lastMove = lastMove;\r\n        this.previousPosition = previousPosition;\r\n        this.nextPosition = null;\r\n        this.comment = \"\";\r\n        this.sublines = [];\r\n\r\n        if(this.previousPosition){\r\n            if(this.lastMove.color === 'w'){\r\n                this.moveNumber = this.previousPosition.moveNumber + 1;\r\n            }else{\r\n                this.moveNumber = this.previousPosition.moveNumber\r\n            }\r\n        }else{\r\n            this.moveNumber = 0\r\n        }\r\n    }\r\n\r\n    sideToMove() {\r\n        if(!this.lastMove || this.lastMove.color === Constants.BLACK)\r\n            return Constants.WHITE\r\n        else\r\n            return Constants.BLACK\r\n    }\r\n\r\n    addNextPosition(nextPosition){\r\n        if(!this.nextPosition){\r\n            this.nextPosition = nextPosition;\r\n            return\r\n        }\r\n        if(this.nextPosition.fen === nextPosition.fen){\r\n            return\r\n        }\r\n        if(!this.sublines.find(pos => pos.fen === nextPosition.fen)){\r\n            this.sublines.push(nextPosition)\r\n        }\r\n    }\r\n}\r\n","import Position from './Position'\r\n\r\nconst STARTING_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\r\nexport default class{\r\n    constructor(){\r\n        this.positions = [];\r\n        this.startingPosition = new Position(STARTING_FEN);\r\n        this.whiteName = \"white\"\r\n        this.blackName = \"black\"\r\n    }\r\n}"],"sourceRoot":""}